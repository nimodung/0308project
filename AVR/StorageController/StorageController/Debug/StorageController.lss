
StorageController.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000110  00800100  000018a0  00001934  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018a0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000021c  00800210  00800210  00001a44  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a44  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001aa0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00001ae0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000023b8  00000000  00000000  00001cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001057  00000000  00000000  00004088  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001368  00000000  00000000  000050df  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000518  00000000  00000000  00006448  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000907  00000000  00000000  00006960  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001201  00000000  00000000  00007267  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  00008468  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 21 04 	jmp	0x842	; 0x842 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 a9 04 	jmp	0x952	; 0x952 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 ea       	ldi	r30, 0xA0	; 160
      7c:	f8 e1       	ldi	r31, 0x18	; 24
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a0 31       	cpi	r26, 0x10	; 16
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	24 e0       	ldi	r18, 0x04	; 4
      8c:	a0 e1       	ldi	r26, 0x10	; 16
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ac 32       	cpi	r26, 0x2C	; 44
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 a9 03 	call	0x752	; 0x752 <main>
      9e:	0c 94 4e 0c 	jmp	0x189c	; 0x189c <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ADC_init>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      a6:	ec e7       	ldi	r30, 0x7C	; 124
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	80 81       	ld	r24, Z
      ac:	80 64       	ori	r24, 0x40	; 64
      ae:	80 83       	st	Z, r24
      b0:	ea e7       	ldi	r30, 0x7A	; 122
      b2:	f0 e0       	ldi	r31, 0x00	; 0
      b4:	80 81       	ld	r24, Z
      b6:	87 68       	ori	r24, 0x87	; 135
      b8:	80 83       	st	Z, r24
      ba:	2f ef       	ldi	r18, 0xFF	; 255
      bc:	83 ec       	ldi	r24, 0xC3	; 195
      be:	99 e0       	ldi	r25, 0x09	; 9
      c0:	21 50       	subi	r18, 0x01	; 1
      c2:	80 40       	sbci	r24, 0x00	; 0
      c4:	90 40       	sbci	r25, 0x00	; 0
      c6:	e1 f7       	brne	.-8      	; 0xc0 <ADC_init+0x1a>
      c8:	00 c0       	rjmp	.+0      	; 0xca <ADC_init+0x24>
      ca:	00 00       	nop
      cc:	08 95       	ret

000000ce <ADC_converting_value>:
      ce:	ec e7       	ldi	r30, 0x7C	; 124
      d0:	f0 e0       	ldi	r31, 0x00	; 0
      d2:	90 81       	ld	r25, Z
      d4:	90 7f       	andi	r25, 0xF0	; 240
      d6:	90 83       	st	Z, r25
      d8:	90 81       	ld	r25, Z
      da:	89 2b       	or	r24, r25
      dc:	80 83       	st	Z, r24
      de:	8f e1       	ldi	r24, 0x1F	; 31
      e0:	93 e0       	ldi	r25, 0x03	; 3
      e2:	01 97       	sbiw	r24, 0x01	; 1
      e4:	f1 f7       	brne	.-4      	; 0xe2 <ADC_converting_value+0x14>
      e6:	00 c0       	rjmp	.+0      	; 0xe8 <ADC_converting_value+0x1a>
      e8:	00 00       	nop
      ea:	ea e7       	ldi	r30, 0x7A	; 122
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	80 81       	ld	r24, Z
      f0:	80 64       	ori	r24, 0x40	; 64
      f2:	80 83       	st	Z, r24
      f4:	80 81       	ld	r24, Z
      f6:	84 ff       	sbrs	r24, 4
      f8:	fd cf       	rjmp	.-6      	; 0xf4 <ADC_converting_value+0x26>
      fa:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
      fe:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     102:	70 e0       	ldi	r23, 0x00	; 0
     104:	76 2f       	mov	r23, r22
     106:	66 27       	eor	r22, r22
     108:	68 0f       	add	r22, r24
     10a:	71 1d       	adc	r23, r1
     10c:	6f 5f       	subi	r22, 0xFF	; 255
     10e:	7f 4f       	sbci	r23, 0xFF	; 255
     110:	07 2e       	mov	r0, r23
     112:	00 0c       	add	r0, r0
     114:	88 0b       	sbc	r24, r24
     116:	99 0b       	sbc	r25, r25
     118:	0e 94 03 06 	call	0xc06	; 0xc06 <__floatsisf>
     11c:	20 e0       	ldi	r18, 0x00	; 0
     11e:	30 e0       	ldi	r19, 0x00	; 0
     120:	4a ef       	ldi	r20, 0xFA	; 250
     122:	53 e4       	ldi	r21, 0x43	; 67
     124:	0e 94 8f 06 	call	0xd1e	; 0xd1e <__mulsf3>
     128:	20 e0       	ldi	r18, 0x00	; 0
     12a:	30 e0       	ldi	r19, 0x00	; 0
     12c:	40 e8       	ldi	r20, 0x80	; 128
     12e:	5a e3       	ldi	r21, 0x3A	; 58
     130:	0e 94 8f 06 	call	0xd1e	; 0xd1e <__mulsf3>
     134:	20 e0       	ldi	r18, 0x00	; 0
     136:	30 e0       	ldi	r19, 0x00	; 0
     138:	40 e4       	ldi	r20, 0x40	; 64
     13a:	50 e4       	ldi	r21, 0x40	; 64
     13c:	0e 94 5f 05 	call	0xabe	; 0xabe <__addsf3>
     140:	0e 94 cb 05 	call	0xb96	; 0xb96 <__fixsfsi>
     144:	cb 01       	movw	r24, r22
     146:	08 95       	ret

00000148 <Volt_to_temperature>:

int Volt_to_temperature(int value) 
{
	int temp = value * 11 / 50 - 30;
	
	return temp;
     148:	2b e0       	ldi	r18, 0x0B	; 11
     14a:	ac 01       	movw	r20, r24
     14c:	24 9f       	mul	r18, r20
     14e:	c0 01       	movw	r24, r0
     150:	25 9f       	mul	r18, r21
     152:	90 0d       	add	r25, r0
     154:	11 24       	eor	r1, r1
     156:	62 e3       	ldi	r22, 0x32	; 50
     158:	70 e0       	ldi	r23, 0x00	; 0
     15a:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <__divmodhi4>
     15e:	cb 01       	movw	r24, r22
     160:	4e 97       	sbiw	r24, 0x1e	; 30
     162:	08 95       	ret

00000164 <FND_shift_out>:
			FND_shift_out(FND4digit_font[i]);
			_delay_ms(400);
		}
	}
	return;
}
     164:	44 98       	cbi	0x08, 4	; 8
     166:	40 e0       	ldi	r20, 0x00	; 0
     168:	50 e0       	ldi	r21, 0x00	; 0
     16a:	68 2f       	mov	r22, r24
     16c:	70 e0       	ldi	r23, 0x00	; 0
     16e:	45 98       	cbi	0x08, 5	; 8
     170:	43 98       	cbi	0x08, 3	; 8
     172:	98 b1       	in	r25, 0x08	; 8
     174:	9b 01       	movw	r18, r22
     176:	04 2e       	mov	r0, r20
     178:	02 c0       	rjmp	.+4      	; 0x17e <FND_shift_out+0x1a>
     17a:	35 95       	asr	r19
     17c:	27 95       	ror	r18
     17e:	0a 94       	dec	r0
     180:	e2 f7       	brpl	.-8      	; 0x17a <FND_shift_out+0x16>
     182:	21 70       	andi	r18, 0x01	; 1
     184:	33 27       	eor	r19, r19
     186:	22 0f       	add	r18, r18
     188:	33 1f       	adc	r19, r19
     18a:	22 0f       	add	r18, r18
     18c:	33 1f       	adc	r19, r19
     18e:	22 0f       	add	r18, r18
     190:	33 1f       	adc	r19, r19
     192:	29 2b       	or	r18, r25
     194:	28 b9       	out	0x08, r18	; 8
     196:	45 9a       	sbi	0x08, 5	; 8
     198:	4f 5f       	subi	r20, 0xFF	; 255
     19a:	5f 4f       	sbci	r21, 0xFF	; 255
     19c:	48 30       	cpi	r20, 0x08	; 8
     19e:	51 05       	cpc	r21, r1
     1a0:	31 f7       	brne	.-52     	; 0x16e <FND_shift_out+0xa>
     1a2:	44 9a       	sbi	0x08, 4	; 8
     1a4:	08 95       	ret

000001a6 <FND_update_value>:

void FND_update_value(int number)
{
     1a6:	cf 93       	push	r28
     1a8:	df 93       	push	r29
     1aa:	ec 01       	movw	r28, r24
	FND[0] = FND4digit_font[number % 10];
     1ac:	ea e1       	ldi	r30, 0x1A	; 26
     1ae:	f2 e0       	ldi	r31, 0x02	; 2
     1b0:	2a e0       	ldi	r18, 0x0A	; 10
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	b9 01       	movw	r22, r18
     1b6:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <__divmodhi4>
     1ba:	dc 01       	movw	r26, r24
     1bc:	a6 5f       	subi	r26, 0xF6	; 246
     1be:	be 4f       	sbci	r27, 0xFE	; 254
     1c0:	8c 91       	ld	r24, X
     1c2:	80 83       	st	Z, r24
	FND[1] = FND4digit_font[number /10 % 10];
     1c4:	cb 01       	movw	r24, r22
     1c6:	b9 01       	movw	r22, r18
     1c8:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <__divmodhi4>
     1cc:	dc 01       	movw	r26, r24
     1ce:	a6 5f       	subi	r26, 0xF6	; 246
     1d0:	be 4f       	sbci	r27, 0xFE	; 254
     1d2:	8c 91       	ld	r24, X
     1d4:	81 83       	std	Z+1, r24	; 0x01
	FND[2] = FND4digit_font[number /100 % 10];
     1d6:	ce 01       	movw	r24, r28
     1d8:	64 e6       	ldi	r22, 0x64	; 100
     1da:	70 e0       	ldi	r23, 0x00	; 0
     1dc:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <__divmodhi4>
     1e0:	cb 01       	movw	r24, r22
     1e2:	b9 01       	movw	r22, r18
     1e4:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <__divmodhi4>
     1e8:	dc 01       	movw	r26, r24
     1ea:	a6 5f       	subi	r26, 0xF6	; 246
     1ec:	be 4f       	sbci	r27, 0xFE	; 254
     1ee:	8c 91       	ld	r24, X
     1f0:	82 83       	std	Z+2, r24	; 0x02
	FND[3] = FND4digit_font[number /1000 % 10];
     1f2:	ce 01       	movw	r24, r28
     1f4:	68 ee       	ldi	r22, 0xE8	; 232
     1f6:	73 e0       	ldi	r23, 0x03	; 3
     1f8:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <__divmodhi4>
     1fc:	cb 01       	movw	r24, r22
     1fe:	b9 01       	movw	r22, r18
     200:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <__divmodhi4>
     204:	dc 01       	movw	r26, r24
     206:	a6 5f       	subi	r26, 0xF6	; 246
     208:	be 4f       	sbci	r27, 0xFE	; 254
     20a:	8c 91       	ld	r24, X
     20c:	83 83       	std	Z+3, r24	; 0x03
	return;
}
     20e:	df 91       	pop	r29
     210:	cf 91       	pop	r28
     212:	08 95       	ret

00000214 <FND4digit_init_shiftR>:
	return;
}

void FND4digit_init_shiftR(void)
{
	FND_COM_DDR |= 0b11110000;  //출력 설정
     214:	8a b1       	in	r24, 0x0a	; 10
     216:	80 6f       	ori	r24, 0xF0	; 240
     218:	8a b9       	out	0x0a, r24	; 10
	FND_COM_PORT &= 0b00001111; //fnd 끄기
     21a:	8b b1       	in	r24, 0x0b	; 11
     21c:	8f 70       	andi	r24, 0x0F	; 15
     21e:	8b b9       	out	0x0b, r24	; 11
	FND_DATA_DDR |= 1 << RClk | 1 << SRClk | 1 << SER; //595 3bit 연결 // 3, 4,5번 연결
     220:	87 b1       	in	r24, 0x07	; 7
     222:	88 63       	ori	r24, 0x38	; 56
     224:	87 b9       	out	0x07, r24	; 7
	FND_DATA_PORT |= 1 << RClk; // 0b00010000; //RClk : 1 //RClk을 상승 edge로 둬서 다른 데이터가 들어가지 않게
     226:	44 9a       	sbi	0x08, 4	; 8
	FND_update_value(0);
     228:	80 e0       	ldi	r24, 0x00	; 0
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <FND_update_value>
     230:	08 95       	ret

00000232 <Keypad_init>:

void Keypad_init(void)
{
	//Keypad_PORT_DDR |= 0b00001111;
	//Keypad_PORT |= 0b00001111; 
	Keypad_PIN_DDR &= 0b11110000; 
     232:	84 b1       	in	r24, 0x04	; 4
     234:	80 7f       	andi	r24, 0xF0	; 240
     236:	84 b9       	out	0x04, r24	; 4
	Keypad_PIN_PORT |= 0b00001111;
     238:	85 b1       	in	r24, 0x05	; 5
     23a:	8f 60       	ori	r24, 0x0F	; 15
     23c:	85 b9       	out	0x05, r24	; 5
     23e:	08 95       	ret

00000240 <Keyscan_sub>:
	return;
}

char Keyscan_sub(void)
{
	if(!(Keypad_PIN & 0b00000001)) return 1; //키가 눌렸을때
     240:	18 9b       	sbis	0x03, 0	; 3
     242:	08 c0       	rjmp	.+16     	; 0x254 <Keyscan_sub+0x14>
	else if(!(Keypad_PIN & 0b00000010)) return 2;
     244:	19 9b       	sbis	0x03, 1	; 3
     246:	08 c0       	rjmp	.+16     	; 0x258 <Keyscan_sub+0x18>
	else if(!(Keypad_PIN & 0b00000100)) return 3;
     248:	1a 9b       	sbis	0x03, 2	; 3
     24a:	08 c0       	rjmp	.+16     	; 0x25c <Keyscan_sub+0x1c>
	else if(!(Keypad_PIN & 0b00001000)) return 4;
     24c:	1b 9b       	sbis	0x03, 3	; 3
     24e:	08 c0       	rjmp	.+16     	; 0x260 <Keyscan_sub+0x20>
	else return 0;
     250:	80 e0       	ldi	r24, 0x00	; 0
     252:	08 95       	ret
	return;
}

char Keyscan_sub(void)
{
	if(!(Keypad_PIN & 0b00000001)) return 1; //키가 눌렸을때
     254:	81 e0       	ldi	r24, 0x01	; 1
     256:	08 95       	ret
	else if(!(Keypad_PIN & 0b00000010)) return 2;
     258:	82 e0       	ldi	r24, 0x02	; 2
     25a:	08 95       	ret
	else if(!(Keypad_PIN & 0b00000100)) return 3;
     25c:	83 e0       	ldi	r24, 0x03	; 3
     25e:	08 95       	ret
	else if(!(Keypad_PIN & 0b00001000)) return 4;
     260:	84 e0       	ldi	r24, 0x04	; 4
	else return 0;
}
     262:	08 95       	ret

00000264 <StorageController_Init>:
	return;
}

void SelectStorage_Porcess(void){
	
	Command_Process();
     264:	0e 94 93 04 	call	0x926	; 0x926 <Timer0_init>
     268:	0e 94 0a 01 	call	0x214	; 0x214 <FND4digit_init_shiftR>
     26c:	0e 94 19 01 	call	0x232	; 0x232 <Keypad_init>
     270:	0e 94 53 00 	call	0xa6	; 0xa6 <ADC_init>
     274:	60 e8       	ldi	r22, 0x80	; 128
     276:	75 e2       	ldi	r23, 0x25	; 37
     278:	80 e0       	ldi	r24, 0x00	; 0
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	0e 94 16 05 	call	0xa2c	; 0xa2c <UART0_init>
     280:	8a b1       	in	r24, 0x0a	; 10
     282:	8c 60       	ori	r24, 0x0C	; 12
     284:	8a b9       	out	0x0a, r24	; 10
     286:	8b b1       	in	r24, 0x0b	; 11
     288:	83 7f       	andi	r24, 0xF3	; 243
     28a:	8b b9       	out	0x0b, r24	; 11
     28c:	84 b1       	in	r24, 0x04	; 4
     28e:	80 63       	ori	r24, 0x30	; 48
     290:	84 b9       	out	0x04, r24	; 4
     292:	85 b1       	in	r24, 0x05	; 5
     294:	8f 7c       	andi	r24, 0xCF	; 207
     296:	85 b9       	out	0x05, r24	; 5
     298:	78 94       	sei
     29a:	08 95       	ret

0000029c <Storage_LED_On>:
     29c:	81 11       	cpse	r24, r1
     29e:	04 c0       	rjmp	.+8      	; 0x2a8 <Storage_LED_On+0xc>
     2a0:	5b 9a       	sbi	0x0b, 3	; 11
     2a2:	2c 98       	cbi	0x05, 4	; 5
     2a4:	2d 98       	cbi	0x05, 5	; 5
     2a6:	08 95       	ret
     2a8:	81 30       	cpi	r24, 0x01	; 1
     2aa:	21 f4       	brne	.+8      	; 0x2b4 <Storage_LED_On+0x18>
     2ac:	5b 98       	cbi	0x0b, 3	; 11
     2ae:	2c 98       	cbi	0x05, 4	; 5
     2b0:	2d 9a       	sbi	0x05, 5	; 5
     2b2:	08 95       	ret
     2b4:	82 30       	cpi	r24, 0x02	; 2
     2b6:	19 f4       	brne	.+6      	; 0x2be <Storage_LED_On+0x22>
     2b8:	5b 98       	cbi	0x0b, 3	; 11
     2ba:	2c 9a       	sbi	0x05, 4	; 5
     2bc:	2d 98       	cbi	0x05, 5	; 5
     2be:	08 95       	ret

000002c0 <print_stock>:
     2c0:	cf 93       	push	r28
     2c2:	df 93       	push	r29
     2c4:	c8 2f       	mov	r28, r24
     2c6:	80 e2       	ldi	r24, 0x20	; 32
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	0e 94 fb 07 	call	0xff6	; 0xff6 <putchar>
     2ce:	d0 e0       	ldi	r29, 0x00	; 0
     2d0:	cc 0f       	add	r28, r28
     2d2:	dd 1f       	adc	r29, r29
     2d4:	fe 01       	movw	r30, r28
     2d6:	e4 5d       	subi	r30, 0xD4	; 212
     2d8:	fe 4f       	sbci	r31, 0xFE	; 254
     2da:	81 81       	ldd	r24, Z+1	; 0x01
     2dc:	8f 93       	push	r24
     2de:	80 81       	ld	r24, Z
     2e0:	8f 93       	push	r24
     2e2:	0e 94 e5 07 	call	0xfca	; 0xfca <printf>
     2e6:	80 e2       	ldi	r24, 0x20	; 32
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	0e 94 fb 07 	call	0xff6	; 0xff6 <putchar>
     2ee:	fe 01       	movw	r30, r28
     2f0:	ea 5d       	subi	r30, 0xDA	; 218
     2f2:	fe 4f       	sbci	r31, 0xFE	; 254
     2f4:	81 81       	ldd	r24, Z+1	; 0x01
     2f6:	8f 93       	push	r24
     2f8:	80 81       	ld	r24, Z
     2fa:	8f 93       	push	r24
     2fc:	0e 94 e5 07 	call	0xfca	; 0xfca <printf>
     300:	80 e2       	ldi	r24, 0x20	; 32
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	0e 94 fb 07 	call	0xff6	; 0xff6 <putchar>
     308:	c0 5e       	subi	r28, 0xE0	; 224
     30a:	de 4f       	sbci	r29, 0xFE	; 254
     30c:	89 81       	ldd	r24, Y+1	; 0x01
     30e:	8f 93       	push	r24
     310:	88 81       	ld	r24, Y
     312:	8f 93       	push	r24
     314:	0e 94 e5 07 	call	0xfca	; 0xfca <printf>
     318:	8a e0       	ldi	r24, 0x0A	; 10
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	0e 94 fb 07 	call	0xff6	; 0xff6 <putchar>
     320:	0f 90       	pop	r0
     322:	0f 90       	pop	r0
     324:	0f 90       	pop	r0
     326:	0f 90       	pop	r0
     328:	0f 90       	pop	r0
     32a:	0f 90       	pop	r0
     32c:	df 91       	pop	r29
     32e:	cf 91       	pop	r28
     330:	08 95       	ret

00000332 <StockManage_Process>:
     332:	df 92       	push	r13
     334:	ef 92       	push	r14
     336:	ff 92       	push	r15
     338:	0f 93       	push	r16
     33a:	1f 93       	push	r17
     33c:	cf 93       	push	r28
     33e:	df 93       	push	r29
     340:	e0 91 32 01 	lds	r30, 0x0132	; 0x800132 <selected_storage>
     344:	f0 e0       	ldi	r31, 0x00	; 0
     346:	ee 0f       	add	r30, r30
     348:	ff 1f       	adc	r31, r31
     34a:	e0 5e       	subi	r30, 0xE0	; 224
     34c:	fe 4f       	sbci	r31, 0xFE	; 254
     34e:	80 81       	ld	r24, Z
     350:	91 81       	ldd	r25, Z+1	; 0x01
     352:	0e 94 46 07 	call	0xe8c	; 0xe8c <atoi>
     356:	ec 01       	movw	r28, r24
     358:	11 e0       	ldi	r17, 0x01	; 1
     35a:	d1 2c       	mov	r13, r1
     35c:	e1 2c       	mov	r14, r1
     35e:	0f 2e       	mov	r0, r31
     360:	ff e0       	ldi	r31, 0x0F	; 15
     362:	ff 2e       	mov	r15, r31
     364:	f0 2d       	mov	r31, r0
     366:	07 e2       	ldi	r16, 0x27	; 39
     368:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <long_key_flag>
     36c:	88 23       	and	r24, r24
     36e:	09 f4       	brne	.+2      	; 0x372 <StockManage_Process+0x40>
     370:	48 c0       	rjmp	.+144    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     372:	0e 94 20 01 	call	0x240	; 0x240 <Keyscan_sub>
     376:	88 23       	and	r24, r24
     378:	09 f4       	brne	.+2      	; 0x37c <StockManage_Process+0x4a>
     37a:	49 c0       	rjmp	.+146    	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     37c:	82 e4       	ldi	r24, 0x42	; 66
     37e:	8a 95       	dec	r24
     380:	f1 f7       	brne	.-4      	; 0x37e <StockManage_Process+0x4c>
     382:	00 c0       	rjmp	.+0      	; 0x384 <StockManage_Process+0x52>
     384:	0e 94 20 01 	call	0x240	; 0x240 <Keyscan_sub>
     388:	88 23       	and	r24, r24
     38a:	09 f4       	brne	.+2      	; 0x38e <StockManage_Process+0x5c>
     38c:	40 c0       	rjmp	.+128    	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     38e:	0e 94 20 01 	call	0x240	; 0x240 <Keyscan_sub>
     392:	81 30       	cpi	r24, 0x01	; 1
     394:	69 f4       	brne	.+26     	; 0x3b0 <StockManage_Process+0x7e>
     396:	21 96       	adiw	r28, 0x01	; 1
     398:	c0 31       	cpi	r28, 0x10	; 16
     39a:	97 e2       	ldi	r25, 0x27	; 39
     39c:	d9 07       	cpc	r29, r25
     39e:	14 f0       	brlt	.+4      	; 0x3a4 <StockManage_Process+0x72>
     3a0:	cf 2d       	mov	r28, r15
     3a2:	d0 2f       	mov	r29, r16
     3a4:	ce 01       	movw	r24, r28
     3a6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <FND_update_value>
     3aa:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <long_key_flag>
     3ae:	2f c0       	rjmp	.+94     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     3b0:	0e 94 20 01 	call	0x240	; 0x240 <Keyscan_sub>
     3b4:	82 30       	cpi	r24, 0x02	; 2
     3b6:	51 f4       	brne	.+20     	; 0x3cc <StockManage_Process+0x9a>
     3b8:	21 97       	sbiw	r28, 0x01	; 1
     3ba:	12 f4       	brpl	.+4      	; 0x3c0 <StockManage_Process+0x8e>
     3bc:	cd 2d       	mov	r28, r13
     3be:	de 2d       	mov	r29, r14
     3c0:	ce 01       	movw	r24, r28
     3c2:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <FND_update_value>
     3c6:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <long_key_flag>
     3ca:	21 c0       	rjmp	.+66     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     3cc:	0e 94 20 01 	call	0x240	; 0x240 <Keyscan_sub>
     3d0:	84 30       	cpi	r24, 0x04	; 4
     3d2:	e9 f4       	brne	.+58     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     3d4:	e0 91 32 01 	lds	r30, 0x0132	; 0x800132 <selected_storage>
     3d8:	f0 e0       	ldi	r31, 0x00	; 0
     3da:	ee 0f       	add	r30, r30
     3dc:	ff 1f       	adc	r31, r31
     3de:	e0 5e       	subi	r30, 0xE0	; 224
     3e0:	fe 4f       	sbci	r31, 0xFE	; 254
     3e2:	60 81       	ld	r22, Z
     3e4:	71 81       	ldd	r23, Z+1	; 0x01
     3e6:	4a e0       	ldi	r20, 0x0A	; 10
     3e8:	ce 01       	movw	r24, r28
     3ea:	0e 94 6d 07 	call	0xeda	; 0xeda <__itoa_ncheck>
     3ee:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <long_key_flag>
     3f2:	85 e0       	ldi	r24, 0x05	; 5
     3f4:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <mode>
     3f8:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <selected_storage>
     3fc:	0e 94 60 01 	call	0x2c0	; 0x2c0 <print_stock>
     400:	0d c0       	rjmp	.+26     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     402:	0e 94 20 01 	call	0x240	; 0x240 <Keyscan_sub>
     406:	81 11       	cpse	r24, r1
     408:	02 c0       	rjmp	.+4      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     40a:	10 93 1f 02 	sts	0x021F, r17	; 0x80021f <long_key_flag>
     40e:	83 ec       	ldi	r24, 0xC3	; 195
     410:	99 e0       	ldi	r25, 0x09	; 9
     412:	01 97       	sbiw	r24, 0x01	; 1
     414:	f1 f7       	brne	.-4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     416:	00 c0       	rjmp	.+0      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     418:	00 00       	nop
     41a:	a6 cf       	rjmp	.-180    	; 0x368 <StockManage_Process+0x36>
     41c:	df 91       	pop	r29
     41e:	cf 91       	pop	r28
     420:	1f 91       	pop	r17
     422:	0f 91       	pop	r16
     424:	ff 90       	pop	r15
     426:	ef 90       	pop	r14
     428:	df 90       	pop	r13
     42a:	08 95       	ret

0000042c <print_temper>:
     42c:	84 e3       	ldi	r24, 0x34	; 52
     42e:	91 e0       	ldi	r25, 0x01	; 1
     430:	0e 94 4f 05 	call	0xa9e	; 0xa9e <TX0_string>
     434:	e0 91 32 01 	lds	r30, 0x0132	; 0x800132 <selected_storage>
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	ee 0f       	add	r30, r30
     43c:	ff 1f       	adc	r31, r31
     43e:	e6 5e       	subi	r30, 0xE6	; 230
     440:	fe 4f       	sbci	r31, 0xFE	; 254
     442:	80 81       	ld	r24, Z
     444:	91 81       	ldd	r25, Z+1	; 0x01
     446:	0e 94 4f 05 	call	0xa9e	; 0xa9e <TX0_string>
     44a:	87 e4       	ldi	r24, 0x47	; 71
     44c:	91 e0       	ldi	r25, 0x01	; 1
     44e:	0e 94 4f 05 	call	0xa9e	; 0xa9e <TX0_string>
     452:	e0 91 32 01 	lds	r30, 0x0132	; 0x800132 <selected_storage>
     456:	f0 e0       	ldi	r31, 0x00	; 0
     458:	ee 0f       	add	r30, r30
     45a:	ff 1f       	adc	r31, r31
     45c:	ec 5e       	subi	r30, 0xEC	; 236
     45e:	fe 4f       	sbci	r31, 0xFE	; 254
     460:	80 81       	ld	r24, Z
     462:	91 81       	ldd	r25, Z+1	; 0x01
     464:	0e 94 4f 05 	call	0xa9e	; 0xa9e <TX0_string>
     468:	8a e5       	ldi	r24, 0x5A	; 90
     46a:	91 e0       	ldi	r25, 0x01	; 1
     46c:	0e 94 4f 05 	call	0xa9e	; 0xa9e <TX0_string>
     470:	08 95       	ret

00000472 <printFND_temper>:
     472:	99 23       	and	r25, r25
     474:	34 f0       	brlt	.+12     	; 0x482 <printFND_temper+0x10>
     476:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <FND_update_value>
     47a:	8f ef       	ldi	r24, 0xFF	; 255
     47c:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <FND+0x2>
     480:	08 95       	ret
     482:	91 95       	neg	r25
     484:	81 95       	neg	r24
     486:	91 09       	sbc	r25, r1
     488:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <FND_update_value>
     48c:	8d ef       	ldi	r24, 0xFD	; 253
     48e:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <FND+0x2>
     492:	08 95       	ret

00000494 <Command_Process>:
     494:	cf 93       	push	r28
     496:	df 93       	push	r29
     498:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <RX_cmd_count>
     49c:	88 23       	and	r24, r24
     49e:	09 f4       	brne	.+2      	; 0x4a2 <Command_Process+0xe>
     4a0:	ca c0       	rjmp	.+404    	; 0x636 <Command_Process+0x1a2>
     4a2:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <RX_cmd_count>
     4a6:	81 50       	subi	r24, 0x01	; 1
     4a8:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <RX_cmd_count>
     4ac:	c0 91 27 02 	lds	r28, 0x0227	; 0x800227 <cmd_idx>
     4b0:	82 e3       	ldi	r24, 0x32	; 50
     4b2:	c8 9f       	mul	r28, r24
     4b4:	e0 01       	movw	r28, r0
     4b6:	11 24       	eor	r1, r1
     4b8:	c4 5d       	subi	r28, 0xD4	; 212
     4ba:	dd 4f       	sbci	r29, 0xFD	; 253
     4bc:	6c e5       	ldi	r22, 0x5C	; 92
     4be:	71 e0       	ldi	r23, 0x01	; 1
     4c0:	ce 01       	movw	r24, r28
     4c2:	0e 94 64 07 	call	0xec8	; 0xec8 <strcmp>
     4c6:	89 2b       	or	r24, r25
     4c8:	41 f4       	brne	.+16     	; 0x4da <Command_Process+0x46>
     4ca:	80 ea       	ldi	r24, 0xA0	; 160
     4cc:	9f e0       	ldi	r25, 0x0F	; 15
     4ce:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <FND_update_value>
     4d2:	85 e0       	ldi	r24, 0x05	; 5
     4d4:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <mode>
     4d8:	8c c0       	rjmp	.+280    	; 0x5f2 <Command_Process+0x15e>
     4da:	62 e6       	ldi	r22, 0x62	; 98
     4dc:	71 e0       	ldi	r23, 0x01	; 1
     4de:	ce 01       	movw	r24, r28
     4e0:	0e 94 64 07 	call	0xec8	; 0xec8 <strcmp>
     4e4:	89 2b       	or	r24, r25
     4e6:	81 f4       	brne	.+32     	; 0x508 <Command_Process+0x74>
     4e8:	88 ee       	ldi	r24, 0xE8	; 232
     4ea:	93 e0       	ldi	r25, 0x03	; 3
     4ec:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <FND_update_value>
     4f0:	81 e7       	ldi	r24, 0x71	; 113
     4f2:	91 e0       	ldi	r25, 0x01	; 1
     4f4:	9f 93       	push	r25
     4f6:	8f 93       	push	r24
     4f8:	0e 94 e5 07 	call	0xfca	; 0xfca <printf>
     4fc:	81 e0       	ldi	r24, 0x01	; 1
     4fe:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <mode>
     502:	0f 90       	pop	r0
     504:	0f 90       	pop	r0
     506:	75 c0       	rjmp	.+234    	; 0x5f2 <Command_Process+0x15e>
     508:	65 e8       	ldi	r22, 0x85	; 133
     50a:	71 e0       	ldi	r23, 0x01	; 1
     50c:	ce 01       	movw	r24, r28
     50e:	0e 94 64 07 	call	0xec8	; 0xec8 <strcmp>
     512:	89 2b       	or	r24, r25
     514:	61 f4       	brne	.+24     	; 0x52e <Command_Process+0x9a>
     516:	80 ed       	ldi	r24, 0xD0	; 208
     518:	97 e0       	ldi	r25, 0x07	; 7
     51a:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <FND_update_value>
     51e:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <selected_storage>
     522:	0e 94 60 01 	call	0x2c0	; 0x2c0 <print_stock>
     526:	82 e0       	ldi	r24, 0x02	; 2
     528:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <mode>
     52c:	62 c0       	rjmp	.+196    	; 0x5f2 <Command_Process+0x15e>
     52e:	63 e9       	ldi	r22, 0x93	; 147
     530:	71 e0       	ldi	r23, 0x01	; 1
     532:	ce 01       	movw	r24, r28
     534:	0e 94 64 07 	call	0xec8	; 0xec8 <strcmp>
     538:	89 2b       	or	r24, r25
     53a:	49 f5       	brne	.+82     	; 0x58e <Command_Process+0xfa>
     53c:	88 eb       	ldi	r24, 0xB8	; 184
     53e:	9b e0       	ldi	r25, 0x0B	; 11
     540:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <FND_update_value>
     544:	e0 91 32 01 	lds	r30, 0x0132	; 0x800132 <selected_storage>
     548:	f0 e0       	ldi	r31, 0x00	; 0
     54a:	ee 0f       	add	r30, r30
     54c:	ff 1f       	adc	r31, r31
     54e:	e6 5e       	subi	r30, 0xE6	; 230
     550:	fe 4f       	sbci	r31, 0xFE	; 254
     552:	c0 81       	ld	r28, Z
     554:	d1 81       	ldd	r29, Z+1	; 0x01
     556:	80 e0       	ldi	r24, 0x00	; 0
     558:	0e 94 67 00 	call	0xce	; 0xce <ADC_converting_value>
     55c:	0e 94 a4 00 	call	0x148	; 0x148 <Volt_to_temperature>
     560:	4a e0       	ldi	r20, 0x0A	; 10
     562:	be 01       	movw	r22, r28
     564:	0e 94 6d 07 	call	0xeda	; 0xeda <__itoa_ncheck>
     568:	e0 91 32 01 	lds	r30, 0x0132	; 0x800132 <selected_storage>
     56c:	f0 e0       	ldi	r31, 0x00	; 0
     56e:	ee 0f       	add	r30, r30
     570:	ff 1f       	adc	r31, r31
     572:	e6 5e       	subi	r30, 0xE6	; 230
     574:	fe 4f       	sbci	r31, 0xFE	; 254
     576:	80 81       	ld	r24, Z
     578:	91 81       	ldd	r25, Z+1	; 0x01
     57a:	0e 94 46 07 	call	0xe8c	; 0xe8c <atoi>
     57e:	0e 94 39 02 	call	0x472	; 0x472 <printFND_temper>
     582:	83 e0       	ldi	r24, 0x03	; 3
     584:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <mode>
     588:	0e 94 16 02 	call	0x42c	; 0x42c <print_temper>
     58c:	32 c0       	rjmp	.+100    	; 0x5f2 <Command_Process+0x15e>
     58e:	62 ea       	ldi	r22, 0xA2	; 162
     590:	71 e0       	ldi	r23, 0x01	; 1
     592:	ce 01       	movw	r24, r28
     594:	0e 94 64 07 	call	0xec8	; 0xec8 <strcmp>
     598:	89 2b       	or	r24, r25
     59a:	59 f4       	brne	.+22     	; 0x5b2 <Command_Process+0x11e>
     59c:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <mode>
     5a0:	81 30       	cpi	r24, 0x01	; 1
     5a2:	09 f0       	breq	.+2      	; 0x5a6 <Command_Process+0x112>
     5a4:	40 c0       	rjmp	.+128    	; 0x626 <Command_Process+0x192>
     5a6:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <selected_storage>
     5aa:	80 e0       	ldi	r24, 0x00	; 0
     5ac:	0e 94 4e 01 	call	0x29c	; 0x29c <Storage_LED_On>
     5b0:	20 c0       	rjmp	.+64     	; 0x5f2 <Command_Process+0x15e>
     5b2:	6b ea       	ldi	r22, 0xAB	; 171
     5b4:	71 e0       	ldi	r23, 0x01	; 1
     5b6:	ce 01       	movw	r24, r28
     5b8:	0e 94 64 07 	call	0xec8	; 0xec8 <strcmp>
     5bc:	89 2b       	or	r24, r25
     5be:	49 f4       	brne	.+18     	; 0x5d2 <Command_Process+0x13e>
     5c0:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <mode>
     5c4:	81 30       	cpi	r24, 0x01	; 1
     5c6:	a9 f4       	brne	.+42     	; 0x5f2 <Command_Process+0x15e>
     5c8:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <selected_storage>
     5cc:	0e 94 4e 01 	call	0x29c	; 0x29c <Storage_LED_On>
     5d0:	10 c0       	rjmp	.+32     	; 0x5f2 <Command_Process+0x15e>
     5d2:	64 eb       	ldi	r22, 0xB4	; 180
     5d4:	71 e0       	ldi	r23, 0x01	; 1
     5d6:	ce 01       	movw	r24, r28
     5d8:	0e 94 64 07 	call	0xec8	; 0xec8 <strcmp>
     5dc:	89 2b       	or	r24, r25
     5de:	49 f4       	brne	.+18     	; 0x5f2 <Command_Process+0x15e>
     5e0:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <mode>
     5e4:	81 30       	cpi	r24, 0x01	; 1
     5e6:	29 f4       	brne	.+10     	; 0x5f2 <Command_Process+0x15e>
     5e8:	82 e0       	ldi	r24, 0x02	; 2
     5ea:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <selected_storage>
     5ee:	0e 94 4e 01 	call	0x29c	; 0x29c <Storage_LED_On>
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <delay_flag>
     5f8:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <delay_flag>
     5fc:	81 11       	cpse	r24, r1
     5fe:	fc cf       	rjmp	.-8      	; 0x5f8 <Command_Process+0x164>
     600:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <cmd_idx>
     604:	9f 5f       	subi	r25, 0xFF	; 255
     606:	8d ec       	ldi	r24, 0xCD	; 205
     608:	98 9f       	mul	r25, r24
     60a:	81 2d       	mov	r24, r1
     60c:	11 24       	eor	r1, r1
     60e:	86 95       	lsr	r24
     610:	86 95       	lsr	r24
     612:	86 95       	lsr	r24
     614:	88 0f       	add	r24, r24
     616:	28 2f       	mov	r18, r24
     618:	22 0f       	add	r18, r18
     61a:	22 0f       	add	r18, r18
     61c:	82 0f       	add	r24, r18
     61e:	98 1b       	sub	r25, r24
     620:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <cmd_idx>
     624:	08 c0       	rjmp	.+16     	; 0x636 <Command_Process+0x1a2>
     626:	6b ea       	ldi	r22, 0xAB	; 171
     628:	71 e0       	ldi	r23, 0x01	; 1
     62a:	ce 01       	movw	r24, r28
     62c:	0e 94 64 07 	call	0xec8	; 0xec8 <strcmp>
     630:	89 2b       	or	r24, r25
     632:	f9 f2       	breq	.-66     	; 0x5f2 <Command_Process+0x15e>
     634:	ce cf       	rjmp	.-100    	; 0x5d2 <Command_Process+0x13e>
     636:	df 91       	pop	r29
     638:	cf 91       	pop	r28
     63a:	08 95       	ret

0000063c <TemperManage_Process>:
	print_stock(selected_storage);
	
	return;
}

void TemperManage_Process(void){
     63c:	df 92       	push	r13
     63e:	ef 92       	push	r14
     640:	ff 92       	push	r15
     642:	0f 93       	push	r16
     644:	1f 93       	push	r17
     646:	cf 93       	push	r28
     648:	df 93       	push	r29
	int desire_temp = atoi(temperDB_desire[selected_storage]);
     64a:	e0 91 32 01 	lds	r30, 0x0132	; 0x800132 <selected_storage>
     64e:	f0 e0       	ldi	r31, 0x00	; 0
     650:	ee 0f       	add	r30, r30
     652:	ff 1f       	adc	r31, r31
     654:	ec 5e       	subi	r30, 0xEC	; 236
     656:	fe 4f       	sbci	r31, 0xFE	; 254
     658:	80 81       	ld	r24, Z
     65a:	91 81       	ldd	r25, Z+1	; 0x01
     65c:	0e 94 46 07 	call	0xe8c	; 0xe8c <atoi>
     660:	ec 01       	movw	r28, r24
		}
		else
		{
			if(Keyscan_sub() == 0)
			{
				long_key_flag = 1;
     662:	11 e0       	ldi	r17, 0x01	; 1
     664:	0f 2e       	mov	r0, r31
     666:	f7 ee       	ldi	r31, 0xE7	; 231
     668:	df 2e       	mov	r13, r31
     66a:	f0 2d       	mov	r31, r0
     66c:	ee 24       	eor	r14, r14
     66e:	ea 94       	dec	r14
     670:	0f 2e       	mov	r0, r31
     672:	fe e1       	ldi	r31, 0x1E	; 30
     674:	ff 2e       	mov	r15, r31
     676:	f0 2d       	mov	r31, r0
     678:	00 e0       	ldi	r16, 0x00	; 0

void TemperManage_Process(void){
	int desire_temp = atoi(temperDB_desire[selected_storage]);
	
	while(1) {
		if(long_key_flag) {
     67a:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <long_key_flag>
     67e:	88 23       	and	r24, r24
     680:	09 f4       	brne	.+2      	; 0x684 <TemperManage_Process+0x48>
     682:	52 c0       	rjmp	.+164    	; 0x728 <TemperManage_Process+0xec>
			if(Keyscan_sub() != 0)
     684:	0e 94 20 01 	call	0x240	; 0x240 <Keyscan_sub>
     688:	88 23       	and	r24, r24
     68a:	09 f4       	brne	.+2      	; 0x68e <TemperManage_Process+0x52>
     68c:	53 c0       	rjmp	.+166    	; 0x734 <TemperManage_Process+0xf8>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     68e:	82 e4       	ldi	r24, 0x42	; 66
     690:	8a 95       	dec	r24
     692:	f1 f7       	brne	.-4      	; 0x690 <TemperManage_Process+0x54>
     694:	00 c0       	rjmp	.+0      	; 0x696 <TemperManage_Process+0x5a>
			{
				_delay_us(200);
				if (Keyscan_sub() != 0)
     696:	0e 94 20 01 	call	0x240	; 0x240 <Keyscan_sub>
     69a:	88 23       	and	r24, r24
     69c:	09 f4       	brne	.+2      	; 0x6a0 <TemperManage_Process+0x64>
     69e:	4a c0       	rjmp	.+148    	; 0x734 <TemperManage_Process+0xf8>
				{
					
					if(Keyscan_sub() == 1) {
     6a0:	0e 94 20 01 	call	0x240	; 0x240 <Keyscan_sub>
     6a4:	81 30       	cpi	r24, 0x01	; 1
     6a6:	61 f4       	brne	.+24     	; 0x6c0 <TemperManage_Process+0x84>
     6a8:	21 96       	adiw	r28, 0x01	; 1
     6aa:	cf 31       	cpi	r28, 0x1F	; 31
     6ac:	d1 05       	cpc	r29, r1
     6ae:	14 f0       	brlt	.+4      	; 0x6b4 <TemperManage_Process+0x78>
     6b0:	cf 2d       	mov	r28, r15
     6b2:	d0 2f       	mov	r29, r16
						desire_temp++;
						if(desire_temp >= 31) desire_temp = 30;
						printFND_temper(desire_temp);
     6b4:	ce 01       	movw	r24, r28
     6b6:	0e 94 39 02 	call	0x472	; 0x472 <printFND_temper>
						long_key_flag = 0;
     6ba:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <long_key_flag>
     6be:	3a c0       	rjmp	.+116    	; 0x734 <TemperManage_Process+0xf8>
					}
					else if(Keyscan_sub() == 2)
     6c0:	0e 94 20 01 	call	0x240	; 0x240 <Keyscan_sub>
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	69 f4       	brne	.+26     	; 0x6e2 <TemperManage_Process+0xa6>
     6c8:	21 97       	sbiw	r28, 0x01	; 1
     6ca:	c7 3e       	cpi	r28, 0xE7	; 231
     6cc:	9f ef       	ldi	r25, 0xFF	; 255
     6ce:	d9 07       	cpc	r29, r25
     6d0:	14 f4       	brge	.+4      	; 0x6d6 <TemperManage_Process+0x9a>
     6d2:	cd 2d       	mov	r28, r13
     6d4:	de 2d       	mov	r29, r14
					{
						desire_temp--; 
						if(desire_temp <= -26) desire_temp = -25;
						printFND_temper(desire_temp);
     6d6:	ce 01       	movw	r24, r28
     6d8:	0e 94 39 02 	call	0x472	; 0x472 <printFND_temper>
						long_key_flag = 0;
     6dc:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <long_key_flag>
     6e0:	29 c0       	rjmp	.+82     	; 0x734 <TemperManage_Process+0xf8>
					}
					else if(Keyscan_sub() == 4) {
     6e2:	0e 94 20 01 	call	0x240	; 0x240 <Keyscan_sub>
     6e6:	84 30       	cpi	r24, 0x04	; 4
     6e8:	29 f5       	brne	.+74     	; 0x734 <TemperManage_Process+0xf8>
						cooling_flag[selected_storage] = 1;
     6ea:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <selected_storage>
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	fc 01       	movw	r30, r24
     6f2:	e0 5f       	subi	r30, 0xF0	; 240
     6f4:	fd 4f       	sbci	r31, 0xFD	; 253
     6f6:	21 e0       	ldi	r18, 0x01	; 1
     6f8:	20 83       	st	Z, r18
						long_key_flag = 0;
     6fa:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <long_key_flag>
				long_key_flag = 1;
			}
		}
		_delay_ms(10);
	}
	itoa(desire_temp,temperDB_desire[selected_storage],10);
     6fe:	88 0f       	add	r24, r24
     700:	99 1f       	adc	r25, r25
     702:	fc 01       	movw	r30, r24
     704:	ec 5e       	subi	r30, 0xEC	; 236
     706:	fe 4f       	sbci	r31, 0xFE	; 254
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     708:	60 81       	ld	r22, Z
     70a:	71 81       	ldd	r23, Z+1	; 0x01
     70c:	4a e0       	ldi	r20, 0x0A	; 10
     70e:	ce 01       	movw	r24, r28
     710:	0e 94 6d 07 	call	0xeda	; 0xeda <__itoa_ncheck>
	
	printf("\r\n");
     714:	8f ec       	ldi	r24, 0xCF	; 207
     716:	91 e0       	ldi	r25, 0x01	; 1
     718:	0e 94 02 08 	call	0x1004	; 0x1004 <puts>
	
	mode = READY_MODE;
     71c:	85 e0       	ldi	r24, 0x05	; 5
     71e:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <mode>
	print_temper();
     722:	0e 94 16 02 	call	0x42c	; 0x42c <print_temper>
	
	return;
     726:	0d c0       	rjmp	.+26     	; 0x742 <TemperManage_Process+0x106>
				
			}
		}
		else
		{
			if(Keyscan_sub() == 0)
     728:	0e 94 20 01 	call	0x240	; 0x240 <Keyscan_sub>
     72c:	81 11       	cpse	r24, r1
     72e:	02 c0       	rjmp	.+4      	; 0x734 <TemperManage_Process+0xf8>
			{
				long_key_flag = 1;
     730:	10 93 1f 02 	sts	0x021F, r17	; 0x80021f <long_key_flag>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     734:	83 ec       	ldi	r24, 0xC3	; 195
     736:	99 e0       	ldi	r25, 0x09	; 9
     738:	01 97       	sbiw	r24, 0x01	; 1
     73a:	f1 f7       	brne	.-4      	; 0x738 <TemperManage_Process+0xfc>
     73c:	00 c0       	rjmp	.+0      	; 0x73e <TemperManage_Process+0x102>
     73e:	00 00       	nop
     740:	9c cf       	rjmp	.-200    	; 0x67a <TemperManage_Process+0x3e>
	
	mode = READY_MODE;
	print_temper();
	
	return;
}
     742:	df 91       	pop	r29
     744:	cf 91       	pop	r28
     746:	1f 91       	pop	r17
     748:	0f 91       	pop	r16
     74a:	ff 90       	pop	r15
     74c:	ef 90       	pop	r14
     74e:	df 90       	pop	r13
     750:	08 95       	ret

00000752 <main>:
char room1_desire, room2_desire, room3_desire;
char cooling_flag[] = {0, 0, 0};	
int main(void)
{

	StorageController_Init();
     752:	0e 94 32 01 	call	0x264	; 0x264 <StorageController_Init>
    {
		if(RX_flag){
			if(RX_data == ROOM1_DESIRE_UP){
				room1_desire++;
				if(room1_desire >= 20) room1_desire = 20;
				printf("room1_desire : %d\n\r", room1_desire);
     756:	cd eb       	ldi	r28, 0xBD	; 189
     758:	d1 e0       	ldi	r29, 0x01	; 1
    while (1) 
    {
		if(RX_flag){
			if(RX_data == ROOM1_DESIRE_UP){
				room1_desire++;
				if(room1_desire >= 20) room1_desire = 20;
     75a:	0f 2e       	mov	r0, r31
     75c:	f4 e1       	ldi	r31, 0x14	; 20
     75e:	ff 2e       	mov	r15, r31
     760:	f0 2d       	mov	r31, r0

	StorageController_Init();
  
    while (1) 
    {
		if(RX_flag){
     762:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <RX_flag>
     766:	88 23       	and	r24, r24
     768:	e1 f0       	breq	.+56     	; 0x7a2 <main+0x50>
			if(RX_data == ROOM1_DESIRE_UP){
     76a:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <RX_data>
     76e:	81 33       	cpi	r24, 0x31	; 49
     770:	b1 f4       	brne	.+44     	; 0x79e <main+0x4c>
				room1_desire++;
     772:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <room1_desire>
     776:	8f 5f       	subi	r24, 0xFF	; 255
				if(room1_desire >= 20) room1_desire = 20;
     778:	84 31       	cpi	r24, 0x14	; 20
     77a:	18 f4       	brcc	.+6      	; 0x782 <main+0x30>
  
    while (1) 
    {
		if(RX_flag){
			if(RX_data == ROOM1_DESIRE_UP){
				room1_desire++;
     77c:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <room1_desire>
     780:	02 c0       	rjmp	.+4      	; 0x786 <main+0x34>
				if(room1_desire >= 20) room1_desire = 20;
     782:	f0 92 1e 02 	sts	0x021E, r15	; 0x80021e <room1_desire>
				printf("room1_desire : %d\n\r", room1_desire);
     786:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <room1_desire>
     78a:	1f 92       	push	r1
     78c:	8f 93       	push	r24
     78e:	df 93       	push	r29
     790:	cf 93       	push	r28
     792:	0e 94 e5 07 	call	0xfca	; 0xfca <printf>
     796:	0f 90       	pop	r0
     798:	0f 90       	pop	r0
     79a:	0f 90       	pop	r0
     79c:	0f 90       	pop	r0
			}
			RX_flag =0;
     79e:	10 92 21 04 	sts	0x0421, r1	; 0x800421 <RX_flag>
		}
		if(time_flag && (selected_storage != STORAGE0)) {
     7a2:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <time_flag>
     7a6:	88 23       	and	r24, r24
     7a8:	c9 f1       	breq	.+114    	; 0x81c <main+0xca>
     7aa:	e0 91 32 01 	lds	r30, 0x0132	; 0x800132 <selected_storage>
     7ae:	e5 30       	cpi	r30, 0x05	; 5
     7b0:	a9 f1       	breq	.+106    	; 0x81c <main+0xca>
			time_flag = 0;
     7b2:	10 92 2a 02 	sts	0x022A, r1	; 0x80022a <time_flag>
			
			itoa(Volt_to_temperature(ADC_converting_value(0)), temperDB_current[selected_storage], 10);
     7b6:	f0 e0       	ldi	r31, 0x00	; 0
     7b8:	ee 0f       	add	r30, r30
     7ba:	ff 1f       	adc	r31, r31
     7bc:	e6 5e       	subi	r30, 0xE6	; 230
     7be:	fe 4f       	sbci	r31, 0xFE	; 254
     7c0:	00 81       	ld	r16, Z
     7c2:	11 81       	ldd	r17, Z+1	; 0x01
     7c4:	80 e0       	ldi	r24, 0x00	; 0
     7c6:	0e 94 67 00 	call	0xce	; 0xce <ADC_converting_value>
     7ca:	0e 94 a4 00 	call	0x148	; 0x148 <Volt_to_temperature>
     7ce:	4a e0       	ldi	r20, 0x0A	; 10
     7d0:	b8 01       	movw	r22, r16
     7d2:	0e 94 6d 07 	call	0xeda	; 0xeda <__itoa_ncheck>
			if(cooling_flag[selected_storage] == 1) {
     7d6:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <selected_storage>
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	fc 01       	movw	r30, r24
     7de:	e0 5f       	subi	r30, 0xF0	; 240
     7e0:	fd 4f       	sbci	r31, 0xFD	; 253
     7e2:	20 81       	ld	r18, Z
     7e4:	21 30       	cpi	r18, 0x01	; 1
     7e6:	c9 f4       	brne	.+50     	; 0x81a <main+0xc8>
				if(atoi(temperDB_current[selected_storage]) > atoi(temperDB_desire[selected_storage])) //현재 온도가 희망 온도보다 높으면
     7e8:	8c 01       	movw	r16, r24
     7ea:	00 0f       	add	r16, r16
     7ec:	11 1f       	adc	r17, r17
     7ee:	f8 01       	movw	r30, r16
     7f0:	e6 5e       	subi	r30, 0xE6	; 230
     7f2:	fe 4f       	sbci	r31, 0xFE	; 254
     7f4:	80 81       	ld	r24, Z
     7f6:	91 81       	ldd	r25, Z+1	; 0x01
     7f8:	0e 94 46 07 	call	0xe8c	; 0xe8c <atoi>
     7fc:	6c 01       	movw	r12, r24
     7fe:	f8 01       	movw	r30, r16
     800:	ec 5e       	subi	r30, 0xEC	; 236
     802:	fe 4f       	sbci	r31, 0xFE	; 254
     804:	80 81       	ld	r24, Z
     806:	91 81       	ldd	r25, Z+1	; 0x01
     808:	0e 94 46 07 	call	0xe8c	; 0xe8c <atoi>
     80c:	8c 15       	cp	r24, r12
     80e:	9d 05       	cpc	r25, r13
     810:	14 f4       	brge	.+4      	; 0x816 <main+0xc4>
				{
					PORTD |= 1 << PORTD2;
     812:	5a 9a       	sbi	0x0b, 2	; 11
     814:	03 c0       	rjmp	.+6      	; 0x81c <main+0xca>
				}
				else PORTD &= ~(1 << PORTD2);
     816:	5a 98       	cbi	0x0b, 2	; 11
     818:	01 c0       	rjmp	.+2      	; 0x81c <main+0xca>
				
			}
			else PORTD &= ~(1 << PORTD2);
     81a:	5a 98       	cbi	0x0b, 2	; 11
		}
		
		if(mode == SELECT_STORAGE_MODE) SelectStorage_Porcess();
     81c:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <mode>
     820:	81 30       	cpi	r24, 0x01	; 1
     822:	19 f4       	brne	.+6      	; 0x82a <main+0xd8>
	return;
}

void SelectStorage_Porcess(void){
	
	Command_Process();
     824:	0e 94 4a 02 	call	0x494	; 0x494 <Command_Process>
     828:	09 c0       	rjmp	.+18     	; 0x83c <main+0xea>
			}
			else PORTD &= ~(1 << PORTD2);
		}
		
		if(mode == SELECT_STORAGE_MODE) SelectStorage_Porcess();
		else if(mode == STOCK_MANAGER_MODE) StockManage_Process();
     82a:	82 30       	cpi	r24, 0x02	; 2
     82c:	19 f4       	brne	.+6      	; 0x834 <main+0xe2>
     82e:	0e 94 99 01 	call	0x332	; 0x332 <StockManage_Process>
     832:	04 c0       	rjmp	.+8      	; 0x83c <main+0xea>
		else if(mode == TEMPER_MANAGER_MODE) TemperManage_Process();
     834:	83 30       	cpi	r24, 0x03	; 3
     836:	11 f4       	brne	.+4      	; 0x83c <main+0xea>
     838:	0e 94 1e 03 	call	0x63c	; 0x63c <TemperManage_Process>
	
		
		Command_Process();
     83c:	0e 94 4a 02 	call	0x494	; 0x494 <Command_Process>
		
	
    }
     840:	90 cf       	rjmp	.-224    	; 0x762 <main+0x10>

00000842 <__vector_14>:
volatile char i = 0, sec = 0, min = 0;							//volatile : 워킹레지스터에 선언하지말고 RAM에다가 할당하라는 의미(휘발성)
																			//전역변수 선언시에 많이 사용

//isr은 가급적 빨리 실행해야 되기 때문에 딜레이 x, 함수호출x ...
ISR(TIMER0_COMPA_vect)						//interrupt 걸리면 실행하는 내용 //Interrupt Service Routine
{	
     842:	1f 92       	push	r1
     844:	0f 92       	push	r0
     846:	0f b6       	in	r0, 0x3f	; 63
     848:	0f 92       	push	r0
     84a:	11 24       	eor	r1, r1
     84c:	2f 93       	push	r18
     84e:	3f 93       	push	r19
     850:	4f 93       	push	r20
     852:	5f 93       	push	r21
     854:	6f 93       	push	r22
     856:	7f 93       	push	r23
     858:	8f 93       	push	r24
     85a:	9f 93       	push	r25
     85c:	af 93       	push	r26
     85e:	bf 93       	push	r27
     860:	ef 93       	push	r30
     862:	ff 93       	push	r31
						
	//static int msec = 0;					//static -> 처음 할당될때 메모리 받아서 반납하지 않음
	//static char i = 0, sec = 0, min = 0;
	msec++;
     864:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <msec>
     868:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <msec+0x1>
     86c:	01 96       	adiw	r24, 0x01	; 1
     86e:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <msec+0x1>
     872:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <msec>
	if(delay_flag) delay_msec++;	
     876:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <delay_flag>
     87a:	88 23       	and	r24, r24
     87c:	49 f0       	breq	.+18     	; 0x890 <__vector_14+0x4e>
     87e:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <delay_msec>
     882:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <delay_msec+0x1>
     886:	01 96       	adiw	r24, 0x01	; 1
     888:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <delay_msec+0x1>
     88c:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <delay_msec>
	if(msec >= 1000)
     890:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <msec>
     894:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <msec+0x1>
     898:	88 3e       	cpi	r24, 0xE8	; 232
     89a:	93 40       	sbci	r25, 0x03	; 3
     89c:	3c f0       	brlt	.+14     	; 0x8ac <__vector_14+0x6a>
	{
		msec = 0;
     89e:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <msec+0x1>
     8a2:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <msec>
		time_flag = 1;
     8a6:	81 e0       	ldi	r24, 0x01	; 1
     8a8:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <time_flag>
	}
	if(delay_msec >= 500) {
     8ac:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <delay_msec>
     8b0:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <delay_msec+0x1>
     8b4:	84 3f       	cpi	r24, 0xF4	; 244
     8b6:	91 40       	sbci	r25, 0x01	; 1
     8b8:	34 f0       	brlt	.+12     	; 0x8c6 <__vector_14+0x84>
		delay_msec = 0;
     8ba:	10 92 15 02 	sts	0x0215, r1	; 0x800215 <delay_msec+0x1>
     8be:	10 92 14 02 	sts	0x0214, r1	; 0x800214 <delay_msec>
		delay_flag = 0;
     8c2:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <delay_flag>
		sec = 0;
		min = 0;
	}
*/
	//FND를 실제로 출력시키는 
	i++;
     8c6:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <i>
     8ca:	8f 5f       	subi	r24, 0xFF	; 255
     8cc:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <i>
 	
 	if(i >=4) i = 0;
     8d0:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <i>
     8d4:	84 30       	cpi	r24, 0x04	; 4
     8d6:	10 f0       	brcs	.+4      	; 0x8dc <__vector_14+0x9a>
     8d8:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <i>
	
	//끄고 데이터 주고 끄고
	FND_COM_PORT &= 0b00001111; //상위 4비트 끄고
     8dc:	8b b1       	in	r24, 0x0b	; 11
     8de:	8f 70       	andi	r24, 0x0F	; 15
     8e0:	8b b9       	out	0x0b, r24	; 11
	FND_shift_out(FND[i]);
     8e2:	e0 91 13 02 	lds	r30, 0x0213	; 0x800213 <i>
     8e6:	f0 e0       	ldi	r31, 0x00	; 0
     8e8:	e6 5e       	subi	r30, 0xE6	; 230
     8ea:	fd 4f       	sbci	r31, 0xFD	; 253
     8ec:	80 81       	ld	r24, Z
     8ee:	0e 94 b2 00 	call	0x164	; 0x164 <FND_shift_out>
	FND_COM_PORT |= FND4digit_digit[i]; //< FND_shift_out보다 먼저하면 이전 데이터가 출력돼서 정확한 출력이 나오지 않음
     8f2:	e0 91 13 02 	lds	r30, 0x0213	; 0x800213 <i>
     8f6:	9b b1       	in	r25, 0x0b	; 11
     8f8:	f0 e0       	ldi	r31, 0x00	; 0
     8fa:	ea 5f       	subi	r30, 0xFA	; 250
     8fc:	fe 4f       	sbci	r31, 0xFE	; 254
     8fe:	80 81       	ld	r24, Z
     900:	89 2b       	or	r24, r25
     902:	8b b9       	out	0x0b, r24	; 11
		dot_matrix_data_PORT = dotmatrix_row[i];
	*/
	
	//if(!(msec % 500))						//아두이노 우노 상의 led 출력 //인터럽트 잘 걸리는지 확인용
	//	PORTB ^= (1<<PORTB5);				// (1<<PORTB5) == 0b00100000 //토글 켜져있으면 끄고 꺼져있으면 켠다
} 
     904:	ff 91       	pop	r31
     906:	ef 91       	pop	r30
     908:	bf 91       	pop	r27
     90a:	af 91       	pop	r26
     90c:	9f 91       	pop	r25
     90e:	8f 91       	pop	r24
     910:	7f 91       	pop	r23
     912:	6f 91       	pop	r22
     914:	5f 91       	pop	r21
     916:	4f 91       	pop	r20
     918:	3f 91       	pop	r19
     91a:	2f 91       	pop	r18
     91c:	0f 90       	pop	r0
     91e:	0f be       	out	0x3f, r0	; 63
     920:	0f 90       	pop	r0
     922:	1f 90       	pop	r1
     924:	18 95       	reti

00000926 <Timer0_init>:
*/

void Timer0_init(void)
{
	//타이머 초기화
	TCCR0A |= 1 << WGM01;					//0b00000010;  //CTC Mode
     926:	84 b5       	in	r24, 0x24	; 36
     928:	82 60       	ori	r24, 0x02	; 2
     92a:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS00 | 1 << CS01);		//0b00000011;  //64분주 사용(하위 3bit : 011)
     92c:	85 b5       	in	r24, 0x25	; 37
     92e:	83 60       	ori	r24, 0x03	; 3
     930:	85 bd       	out	0x25, r24	; 37
	OCR0A = 249;							//비교할 값 => (16,000,000 / 64) / 1000 = 250 (0 ~ "249")			//1ms 주기
     932:	89 ef       	ldi	r24, 0xF9	; 249
     934:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= 1 << OCIE0A;                  //0b00000010; //어떤 interrupt 걸리게 할건지 정하는	// OC0A 비교 매치 인터럽트 활성화
     936:	ee e6       	ldi	r30, 0x6E	; 110
     938:	f0 e0       	ldi	r31, 0x00	; 0
     93a:	80 81       	ld	r24, Z
     93c:	82 60       	ori	r24, 0x02	; 2
     93e:	80 83       	st	Z, r24
     940:	08 95       	ret

00000942 <TX0_char>:
				PORTB ^= 1 << PORTB5;
				
			}
			_delay_ms(1000);	
			cmd_idx++;
			cmd_idx = cmd_idx % COMMAND_MAX;
     942:	e0 ec       	ldi	r30, 0xC0	; 192
     944:	f0 e0       	ldi	r31, 0x00	; 0
     946:	90 81       	ld	r25, Z
     948:	95 ff       	sbrs	r25, 5
     94a:	fd cf       	rjmp	.-6      	; 0x946 <TX0_char+0x4>
     94c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     950:	08 95       	ret

00000952 <__vector_18>:
     952:	1f 92       	push	r1
     954:	0f 92       	push	r0
     956:	0f b6       	in	r0, 0x3f	; 63
     958:	0f 92       	push	r0
     95a:	11 24       	eor	r1, r1
     95c:	2f 93       	push	r18
     95e:	3f 93       	push	r19
     960:	4f 93       	push	r20
     962:	5f 93       	push	r21
     964:	6f 93       	push	r22
     966:	7f 93       	push	r23
     968:	8f 93       	push	r24
     96a:	9f 93       	push	r25
     96c:	af 93       	push	r26
     96e:	bf 93       	push	r27
     970:	ef 93       	push	r30
     972:	ff 93       	push	r31
     974:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     978:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <RX_data>
     97c:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <buf_idx.2082>
     980:	82 33       	cpi	r24, 0x32	; 50
     982:	e0 f5       	brcc	.+120    	; 0x9fc <__vector_18+0xaa>
     984:	90 91 20 04 	lds	r25, 0x0420	; 0x800420 <RX_cmd_count>
     988:	9b 30       	cpi	r25, 0x0B	; 11
     98a:	c0 f5       	brcc	.+112    	; 0x9fc <__vector_18+0xaa>
     98c:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <RX_data>
     990:	9a 30       	cpi	r25, 0x0A	; 10
     992:	19 f5       	brne	.+70     	; 0x9da <__vector_18+0x88>
     994:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <cmd_idx.2083>
     998:	22 e3       	ldi	r18, 0x32	; 50
     99a:	92 9f       	mul	r25, r18
     99c:	f0 01       	movw	r30, r0
     99e:	11 24       	eor	r1, r1
     9a0:	e4 5d       	subi	r30, 0xD4	; 212
     9a2:	fd 4f       	sbci	r31, 0xFD	; 253
     9a4:	e8 0f       	add	r30, r24
     9a6:	f1 1d       	adc	r31, r1
     9a8:	10 82       	st	Z, r1
     9aa:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <buf_idx.2082>
     9ae:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <RX_cmd_count>
     9b2:	8f 5f       	subi	r24, 0xFF	; 255
     9b4:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <RX_cmd_count>
     9b8:	9f 5f       	subi	r25, 0xFF	; 255
     9ba:	8d ec       	ldi	r24, 0xCD	; 205
     9bc:	98 9f       	mul	r25, r24
     9be:	81 2d       	mov	r24, r1
     9c0:	11 24       	eor	r1, r1
     9c2:	86 95       	lsr	r24
     9c4:	86 95       	lsr	r24
     9c6:	86 95       	lsr	r24
     9c8:	88 0f       	add	r24, r24
     9ca:	28 2f       	mov	r18, r24
     9cc:	22 0f       	add	r18, r18
     9ce:	22 0f       	add	r18, r18
     9d0:	82 0f       	add	r24, r18
     9d2:	98 1b       	sub	r25, r24
     9d4:	90 93 18 02 	sts	0x0218, r25	; 0x800218 <cmd_idx.2083>
     9d8:	11 c0       	rjmp	.+34     	; 0x9fc <__vector_18+0xaa>
     9da:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <cmd_idx.2083>
     9de:	91 e0       	ldi	r25, 0x01	; 1
     9e0:	98 0f       	add	r25, r24
     9e2:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <buf_idx.2082>
     9e6:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <RX_data>
     9ea:	22 e3       	ldi	r18, 0x32	; 50
     9ec:	e2 9f       	mul	r30, r18
     9ee:	f0 01       	movw	r30, r0
     9f0:	11 24       	eor	r1, r1
     9f2:	e4 5d       	subi	r30, 0xD4	; 212
     9f4:	fd 4f       	sbci	r31, 0xFD	; 253
     9f6:	e8 0f       	add	r30, r24
     9f8:	f1 1d       	adc	r31, r1
     9fa:	90 83       	st	Z, r25
     9fc:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <RX_data>
     a00:	0e 94 a1 04 	call	0x942	; 0x942 <TX0_char>
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <RX_flag>
     a0a:	ff 91       	pop	r31
     a0c:	ef 91       	pop	r30
     a0e:	bf 91       	pop	r27
     a10:	af 91       	pop	r26
     a12:	9f 91       	pop	r25
     a14:	8f 91       	pop	r24
     a16:	7f 91       	pop	r23
     a18:	6f 91       	pop	r22
     a1a:	5f 91       	pop	r21
     a1c:	4f 91       	pop	r20
     a1e:	3f 91       	pop	r19
     a20:	2f 91       	pop	r18
     a22:	0f 90       	pop	r0
     a24:	0f be       	out	0x3f, r0	; 63
     a26:	0f 90       	pop	r0
     a28:	1f 90       	pop	r1
     a2a:	18 95       	reti

00000a2c <UART0_init>:
     a2c:	cf 92       	push	r12
     a2e:	df 92       	push	r13
     a30:	ef 92       	push	r14
     a32:	ff 92       	push	r15
     a34:	6b 01       	movw	r12, r22
     a36:	7c 01       	movw	r14, r24
     a38:	60 e0       	ldi	r22, 0x00	; 0
     a3a:	70 e0       	ldi	r23, 0x00	; 0
     a3c:	81 ea       	ldi	r24, 0xA1	; 161
     a3e:	94 e0       	ldi	r25, 0x04	; 4
     a40:	0e 94 9a 07 	call	0xf34	; 0xf34 <fdevopen>
     a44:	e1 ec       	ldi	r30, 0xC1	; 193
     a46:	f0 e0       	ldi	r31, 0x00	; 0
     a48:	80 81       	ld	r24, Z
     a4a:	88 69       	ori	r24, 0x98	; 152
     a4c:	80 83       	st	Z, r24
     a4e:	e2 ec       	ldi	r30, 0xC2	; 194
     a50:	f0 e0       	ldi	r31, 0x00	; 0
     a52:	80 81       	ld	r24, Z
     a54:	86 60       	ori	r24, 0x06	; 6
     a56:	80 83       	st	Z, r24
     a58:	60 e4       	ldi	r22, 0x40	; 64
     a5a:	72 e4       	ldi	r23, 0x42	; 66
     a5c:	8f e0       	ldi	r24, 0x0F	; 15
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	a7 01       	movw	r20, r14
     a62:	96 01       	movw	r18, r12
     a64:	0e 94 10 07 	call	0xe20	; 0xe20 <__udivmodsi4>
     a68:	da 01       	movw	r26, r20
     a6a:	c9 01       	movw	r24, r18
     a6c:	01 97       	sbiw	r24, 0x01	; 1
     a6e:	a1 09       	sbc	r26, r1
     a70:	b1 09       	sbc	r27, r1
     a72:	89 2f       	mov	r24, r25
     a74:	9a 2f       	mov	r25, r26
     a76:	ab 2f       	mov	r26, r27
     a78:	bb 27       	eor	r27, r27
     a7a:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     a7e:	21 50       	subi	r18, 0x01	; 1
     a80:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     a84:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     a88:	8f e9       	ldi	r24, 0x9F	; 159
     a8a:	9f e0       	ldi	r25, 0x0F	; 15
     a8c:	01 97       	sbiw	r24, 0x01	; 1
     a8e:	f1 f7       	brne	.-4      	; 0xa8c <UART0_init+0x60>
     a90:	00 c0       	rjmp	.+0      	; 0xa92 <UART0_init+0x66>
     a92:	00 00       	nop
     a94:	ff 90       	pop	r15
     a96:	ef 90       	pop	r14
     a98:	df 90       	pop	r13
     a9a:	cf 90       	pop	r12
     a9c:	08 95       	ret

00000a9e <TX0_string>:
	UDR0 = data; //데이터 보낸 것
}

//문자열 송신
void TX0_string(char *string)
{
     a9e:	cf 93       	push	r28
     aa0:	df 93       	push	r29
     aa2:	ec 01       	movw	r28, r24
	while((*string))			// == (*string) != '\0' //string 변수가 가리키는 값이 null이 아닐때
     aa4:	88 81       	ld	r24, Y
     aa6:	88 23       	and	r24, r24
     aa8:	31 f0       	breq	.+12     	; 0xab6 <TX0_string+0x18>
     aaa:	21 96       	adiw	r28, 0x01	; 1
	{
		TX0_char((*string));	//string 변수가 가리키고있는 주소값의 값 //첫 글자
     aac:	0e 94 a1 04 	call	0x942	; 0x942 <TX0_char>
}

//문자열 송신
void TX0_string(char *string)
{
	while((*string))			// == (*string) != '\0' //string 변수가 가리키는 값이 null이 아닐때
     ab0:	89 91       	ld	r24, Y+
     ab2:	81 11       	cpse	r24, r1
     ab4:	fb cf       	rjmp	.-10     	; 0xaac <TX0_string+0xe>
		TX0_char((*string));	//string 변수가 가리키고있는 주소값의 값 //첫 글자
		string++;				//주소값 증가 // 다음 글자
	}
	
	return;
}
     ab6:	df 91       	pop	r29
     ab8:	cf 91       	pop	r28
     aba:	08 95       	ret

00000abc <__subsf3>:
     abc:	50 58       	subi	r21, 0x80	; 128

00000abe <__addsf3>:
     abe:	bb 27       	eor	r27, r27
     ac0:	aa 27       	eor	r26, r26
     ac2:	0e 94 76 05 	call	0xaec	; 0xaec <__addsf3x>
     ac6:	0c 94 55 06 	jmp	0xcaa	; 0xcaa <__fp_round>
     aca:	0e 94 47 06 	call	0xc8e	; 0xc8e <__fp_pscA>
     ace:	38 f0       	brcs	.+14     	; 0xade <__addsf3+0x20>
     ad0:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fp_pscB>
     ad4:	20 f0       	brcs	.+8      	; 0xade <__addsf3+0x20>
     ad6:	39 f4       	brne	.+14     	; 0xae6 <__addsf3+0x28>
     ad8:	9f 3f       	cpi	r25, 0xFF	; 255
     ada:	19 f4       	brne	.+6      	; 0xae2 <__addsf3+0x24>
     adc:	26 f4       	brtc	.+8      	; 0xae6 <__addsf3+0x28>
     ade:	0c 94 44 06 	jmp	0xc88	; 0xc88 <__fp_nan>
     ae2:	0e f4       	brtc	.+2      	; 0xae6 <__addsf3+0x28>
     ae4:	e0 95       	com	r30
     ae6:	e7 fb       	bst	r30, 7
     ae8:	0c 94 3e 06 	jmp	0xc7c	; 0xc7c <__fp_inf>

00000aec <__addsf3x>:
     aec:	e9 2f       	mov	r30, r25
     aee:	0e 94 66 06 	call	0xccc	; 0xccc <__fp_split3>
     af2:	58 f3       	brcs	.-42     	; 0xaca <__addsf3+0xc>
     af4:	ba 17       	cp	r27, r26
     af6:	62 07       	cpc	r22, r18
     af8:	73 07       	cpc	r23, r19
     afa:	84 07       	cpc	r24, r20
     afc:	95 07       	cpc	r25, r21
     afe:	20 f0       	brcs	.+8      	; 0xb08 <__addsf3x+0x1c>
     b00:	79 f4       	brne	.+30     	; 0xb20 <__addsf3x+0x34>
     b02:	a6 f5       	brtc	.+104    	; 0xb6c <__addsf3x+0x80>
     b04:	0c 94 88 06 	jmp	0xd10	; 0xd10 <__fp_zero>
     b08:	0e f4       	brtc	.+2      	; 0xb0c <__addsf3x+0x20>
     b0a:	e0 95       	com	r30
     b0c:	0b 2e       	mov	r0, r27
     b0e:	ba 2f       	mov	r27, r26
     b10:	a0 2d       	mov	r26, r0
     b12:	0b 01       	movw	r0, r22
     b14:	b9 01       	movw	r22, r18
     b16:	90 01       	movw	r18, r0
     b18:	0c 01       	movw	r0, r24
     b1a:	ca 01       	movw	r24, r20
     b1c:	a0 01       	movw	r20, r0
     b1e:	11 24       	eor	r1, r1
     b20:	ff 27       	eor	r31, r31
     b22:	59 1b       	sub	r21, r25
     b24:	99 f0       	breq	.+38     	; 0xb4c <__addsf3x+0x60>
     b26:	59 3f       	cpi	r21, 0xF9	; 249
     b28:	50 f4       	brcc	.+20     	; 0xb3e <__addsf3x+0x52>
     b2a:	50 3e       	cpi	r21, 0xE0	; 224
     b2c:	68 f1       	brcs	.+90     	; 0xb88 <__addsf3x+0x9c>
     b2e:	1a 16       	cp	r1, r26
     b30:	f0 40       	sbci	r31, 0x00	; 0
     b32:	a2 2f       	mov	r26, r18
     b34:	23 2f       	mov	r18, r19
     b36:	34 2f       	mov	r19, r20
     b38:	44 27       	eor	r20, r20
     b3a:	58 5f       	subi	r21, 0xF8	; 248
     b3c:	f3 cf       	rjmp	.-26     	; 0xb24 <__addsf3x+0x38>
     b3e:	46 95       	lsr	r20
     b40:	37 95       	ror	r19
     b42:	27 95       	ror	r18
     b44:	a7 95       	ror	r26
     b46:	f0 40       	sbci	r31, 0x00	; 0
     b48:	53 95       	inc	r21
     b4a:	c9 f7       	brne	.-14     	; 0xb3e <__addsf3x+0x52>
     b4c:	7e f4       	brtc	.+30     	; 0xb6c <__addsf3x+0x80>
     b4e:	1f 16       	cp	r1, r31
     b50:	ba 0b       	sbc	r27, r26
     b52:	62 0b       	sbc	r22, r18
     b54:	73 0b       	sbc	r23, r19
     b56:	84 0b       	sbc	r24, r20
     b58:	ba f0       	brmi	.+46     	; 0xb88 <__addsf3x+0x9c>
     b5a:	91 50       	subi	r25, 0x01	; 1
     b5c:	a1 f0       	breq	.+40     	; 0xb86 <__addsf3x+0x9a>
     b5e:	ff 0f       	add	r31, r31
     b60:	bb 1f       	adc	r27, r27
     b62:	66 1f       	adc	r22, r22
     b64:	77 1f       	adc	r23, r23
     b66:	88 1f       	adc	r24, r24
     b68:	c2 f7       	brpl	.-16     	; 0xb5a <__addsf3x+0x6e>
     b6a:	0e c0       	rjmp	.+28     	; 0xb88 <__addsf3x+0x9c>
     b6c:	ba 0f       	add	r27, r26
     b6e:	62 1f       	adc	r22, r18
     b70:	73 1f       	adc	r23, r19
     b72:	84 1f       	adc	r24, r20
     b74:	48 f4       	brcc	.+18     	; 0xb88 <__addsf3x+0x9c>
     b76:	87 95       	ror	r24
     b78:	77 95       	ror	r23
     b7a:	67 95       	ror	r22
     b7c:	b7 95       	ror	r27
     b7e:	f7 95       	ror	r31
     b80:	9e 3f       	cpi	r25, 0xFE	; 254
     b82:	08 f0       	brcs	.+2      	; 0xb86 <__addsf3x+0x9a>
     b84:	b0 cf       	rjmp	.-160    	; 0xae6 <__addsf3+0x28>
     b86:	93 95       	inc	r25
     b88:	88 0f       	add	r24, r24
     b8a:	08 f0       	brcs	.+2      	; 0xb8e <__addsf3x+0xa2>
     b8c:	99 27       	eor	r25, r25
     b8e:	ee 0f       	add	r30, r30
     b90:	97 95       	ror	r25
     b92:	87 95       	ror	r24
     b94:	08 95       	ret

00000b96 <__fixsfsi>:
     b96:	0e 94 d2 05 	call	0xba4	; 0xba4 <__fixunssfsi>
     b9a:	68 94       	set
     b9c:	b1 11       	cpse	r27, r1
     b9e:	0c 94 89 06 	jmp	0xd12	; 0xd12 <__fp_szero>
     ba2:	08 95       	ret

00000ba4 <__fixunssfsi>:
     ba4:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__fp_splitA>
     ba8:	88 f0       	brcs	.+34     	; 0xbcc <__fixunssfsi+0x28>
     baa:	9f 57       	subi	r25, 0x7F	; 127
     bac:	98 f0       	brcs	.+38     	; 0xbd4 <__fixunssfsi+0x30>
     bae:	b9 2f       	mov	r27, r25
     bb0:	99 27       	eor	r25, r25
     bb2:	b7 51       	subi	r27, 0x17	; 23
     bb4:	b0 f0       	brcs	.+44     	; 0xbe2 <__fixunssfsi+0x3e>
     bb6:	e1 f0       	breq	.+56     	; 0xbf0 <__fixunssfsi+0x4c>
     bb8:	66 0f       	add	r22, r22
     bba:	77 1f       	adc	r23, r23
     bbc:	88 1f       	adc	r24, r24
     bbe:	99 1f       	adc	r25, r25
     bc0:	1a f0       	brmi	.+6      	; 0xbc8 <__fixunssfsi+0x24>
     bc2:	ba 95       	dec	r27
     bc4:	c9 f7       	brne	.-14     	; 0xbb8 <__fixunssfsi+0x14>
     bc6:	14 c0       	rjmp	.+40     	; 0xbf0 <__fixunssfsi+0x4c>
     bc8:	b1 30       	cpi	r27, 0x01	; 1
     bca:	91 f0       	breq	.+36     	; 0xbf0 <__fixunssfsi+0x4c>
     bcc:	0e 94 88 06 	call	0xd10	; 0xd10 <__fp_zero>
     bd0:	b1 e0       	ldi	r27, 0x01	; 1
     bd2:	08 95       	ret
     bd4:	0c 94 88 06 	jmp	0xd10	; 0xd10 <__fp_zero>
     bd8:	67 2f       	mov	r22, r23
     bda:	78 2f       	mov	r23, r24
     bdc:	88 27       	eor	r24, r24
     bde:	b8 5f       	subi	r27, 0xF8	; 248
     be0:	39 f0       	breq	.+14     	; 0xbf0 <__fixunssfsi+0x4c>
     be2:	b9 3f       	cpi	r27, 0xF9	; 249
     be4:	cc f3       	brlt	.-14     	; 0xbd8 <__fixunssfsi+0x34>
     be6:	86 95       	lsr	r24
     be8:	77 95       	ror	r23
     bea:	67 95       	ror	r22
     bec:	b3 95       	inc	r27
     bee:	d9 f7       	brne	.-10     	; 0xbe6 <__fixunssfsi+0x42>
     bf0:	3e f4       	brtc	.+14     	; 0xc00 <__fixunssfsi+0x5c>
     bf2:	90 95       	com	r25
     bf4:	80 95       	com	r24
     bf6:	70 95       	com	r23
     bf8:	61 95       	neg	r22
     bfa:	7f 4f       	sbci	r23, 0xFF	; 255
     bfc:	8f 4f       	sbci	r24, 0xFF	; 255
     bfe:	9f 4f       	sbci	r25, 0xFF	; 255
     c00:	08 95       	ret

00000c02 <__floatunsisf>:
     c02:	e8 94       	clt
     c04:	09 c0       	rjmp	.+18     	; 0xc18 <__floatsisf+0x12>

00000c06 <__floatsisf>:
     c06:	97 fb       	bst	r25, 7
     c08:	3e f4       	brtc	.+14     	; 0xc18 <__floatsisf+0x12>
     c0a:	90 95       	com	r25
     c0c:	80 95       	com	r24
     c0e:	70 95       	com	r23
     c10:	61 95       	neg	r22
     c12:	7f 4f       	sbci	r23, 0xFF	; 255
     c14:	8f 4f       	sbci	r24, 0xFF	; 255
     c16:	9f 4f       	sbci	r25, 0xFF	; 255
     c18:	99 23       	and	r25, r25
     c1a:	a9 f0       	breq	.+42     	; 0xc46 <__floatsisf+0x40>
     c1c:	f9 2f       	mov	r31, r25
     c1e:	96 e9       	ldi	r25, 0x96	; 150
     c20:	bb 27       	eor	r27, r27
     c22:	93 95       	inc	r25
     c24:	f6 95       	lsr	r31
     c26:	87 95       	ror	r24
     c28:	77 95       	ror	r23
     c2a:	67 95       	ror	r22
     c2c:	b7 95       	ror	r27
     c2e:	f1 11       	cpse	r31, r1
     c30:	f8 cf       	rjmp	.-16     	; 0xc22 <__floatsisf+0x1c>
     c32:	fa f4       	brpl	.+62     	; 0xc72 <__floatsisf+0x6c>
     c34:	bb 0f       	add	r27, r27
     c36:	11 f4       	brne	.+4      	; 0xc3c <__floatsisf+0x36>
     c38:	60 ff       	sbrs	r22, 0
     c3a:	1b c0       	rjmp	.+54     	; 0xc72 <__floatsisf+0x6c>
     c3c:	6f 5f       	subi	r22, 0xFF	; 255
     c3e:	7f 4f       	sbci	r23, 0xFF	; 255
     c40:	8f 4f       	sbci	r24, 0xFF	; 255
     c42:	9f 4f       	sbci	r25, 0xFF	; 255
     c44:	16 c0       	rjmp	.+44     	; 0xc72 <__floatsisf+0x6c>
     c46:	88 23       	and	r24, r24
     c48:	11 f0       	breq	.+4      	; 0xc4e <__floatsisf+0x48>
     c4a:	96 e9       	ldi	r25, 0x96	; 150
     c4c:	11 c0       	rjmp	.+34     	; 0xc70 <__floatsisf+0x6a>
     c4e:	77 23       	and	r23, r23
     c50:	21 f0       	breq	.+8      	; 0xc5a <__floatsisf+0x54>
     c52:	9e e8       	ldi	r25, 0x8E	; 142
     c54:	87 2f       	mov	r24, r23
     c56:	76 2f       	mov	r23, r22
     c58:	05 c0       	rjmp	.+10     	; 0xc64 <__floatsisf+0x5e>
     c5a:	66 23       	and	r22, r22
     c5c:	71 f0       	breq	.+28     	; 0xc7a <__floatsisf+0x74>
     c5e:	96 e8       	ldi	r25, 0x86	; 134
     c60:	86 2f       	mov	r24, r22
     c62:	70 e0       	ldi	r23, 0x00	; 0
     c64:	60 e0       	ldi	r22, 0x00	; 0
     c66:	2a f0       	brmi	.+10     	; 0xc72 <__floatsisf+0x6c>
     c68:	9a 95       	dec	r25
     c6a:	66 0f       	add	r22, r22
     c6c:	77 1f       	adc	r23, r23
     c6e:	88 1f       	adc	r24, r24
     c70:	da f7       	brpl	.-10     	; 0xc68 <__floatsisf+0x62>
     c72:	88 0f       	add	r24, r24
     c74:	96 95       	lsr	r25
     c76:	87 95       	ror	r24
     c78:	97 f9       	bld	r25, 7
     c7a:	08 95       	ret

00000c7c <__fp_inf>:
     c7c:	97 f9       	bld	r25, 7
     c7e:	9f 67       	ori	r25, 0x7F	; 127
     c80:	80 e8       	ldi	r24, 0x80	; 128
     c82:	70 e0       	ldi	r23, 0x00	; 0
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	08 95       	ret

00000c88 <__fp_nan>:
     c88:	9f ef       	ldi	r25, 0xFF	; 255
     c8a:	80 ec       	ldi	r24, 0xC0	; 192
     c8c:	08 95       	ret

00000c8e <__fp_pscA>:
     c8e:	00 24       	eor	r0, r0
     c90:	0a 94       	dec	r0
     c92:	16 16       	cp	r1, r22
     c94:	17 06       	cpc	r1, r23
     c96:	18 06       	cpc	r1, r24
     c98:	09 06       	cpc	r0, r25
     c9a:	08 95       	ret

00000c9c <__fp_pscB>:
     c9c:	00 24       	eor	r0, r0
     c9e:	0a 94       	dec	r0
     ca0:	12 16       	cp	r1, r18
     ca2:	13 06       	cpc	r1, r19
     ca4:	14 06       	cpc	r1, r20
     ca6:	05 06       	cpc	r0, r21
     ca8:	08 95       	ret

00000caa <__fp_round>:
     caa:	09 2e       	mov	r0, r25
     cac:	03 94       	inc	r0
     cae:	00 0c       	add	r0, r0
     cb0:	11 f4       	brne	.+4      	; 0xcb6 <__fp_round+0xc>
     cb2:	88 23       	and	r24, r24
     cb4:	52 f0       	brmi	.+20     	; 0xcca <__fp_round+0x20>
     cb6:	bb 0f       	add	r27, r27
     cb8:	40 f4       	brcc	.+16     	; 0xcca <__fp_round+0x20>
     cba:	bf 2b       	or	r27, r31
     cbc:	11 f4       	brne	.+4      	; 0xcc2 <__fp_round+0x18>
     cbe:	60 ff       	sbrs	r22, 0
     cc0:	04 c0       	rjmp	.+8      	; 0xcca <__fp_round+0x20>
     cc2:	6f 5f       	subi	r22, 0xFF	; 255
     cc4:	7f 4f       	sbci	r23, 0xFF	; 255
     cc6:	8f 4f       	sbci	r24, 0xFF	; 255
     cc8:	9f 4f       	sbci	r25, 0xFF	; 255
     cca:	08 95       	ret

00000ccc <__fp_split3>:
     ccc:	57 fd       	sbrc	r21, 7
     cce:	90 58       	subi	r25, 0x80	; 128
     cd0:	44 0f       	add	r20, r20
     cd2:	55 1f       	adc	r21, r21
     cd4:	59 f0       	breq	.+22     	; 0xcec <__fp_splitA+0x10>
     cd6:	5f 3f       	cpi	r21, 0xFF	; 255
     cd8:	71 f0       	breq	.+28     	; 0xcf6 <__fp_splitA+0x1a>
     cda:	47 95       	ror	r20

00000cdc <__fp_splitA>:
     cdc:	88 0f       	add	r24, r24
     cde:	97 fb       	bst	r25, 7
     ce0:	99 1f       	adc	r25, r25
     ce2:	61 f0       	breq	.+24     	; 0xcfc <__fp_splitA+0x20>
     ce4:	9f 3f       	cpi	r25, 0xFF	; 255
     ce6:	79 f0       	breq	.+30     	; 0xd06 <__fp_splitA+0x2a>
     ce8:	87 95       	ror	r24
     cea:	08 95       	ret
     cec:	12 16       	cp	r1, r18
     cee:	13 06       	cpc	r1, r19
     cf0:	14 06       	cpc	r1, r20
     cf2:	55 1f       	adc	r21, r21
     cf4:	f2 cf       	rjmp	.-28     	; 0xcda <__fp_split3+0xe>
     cf6:	46 95       	lsr	r20
     cf8:	f1 df       	rcall	.-30     	; 0xcdc <__fp_splitA>
     cfa:	08 c0       	rjmp	.+16     	; 0xd0c <__fp_splitA+0x30>
     cfc:	16 16       	cp	r1, r22
     cfe:	17 06       	cpc	r1, r23
     d00:	18 06       	cpc	r1, r24
     d02:	99 1f       	adc	r25, r25
     d04:	f1 cf       	rjmp	.-30     	; 0xce8 <__fp_splitA+0xc>
     d06:	86 95       	lsr	r24
     d08:	71 05       	cpc	r23, r1
     d0a:	61 05       	cpc	r22, r1
     d0c:	08 94       	sec
     d0e:	08 95       	ret

00000d10 <__fp_zero>:
     d10:	e8 94       	clt

00000d12 <__fp_szero>:
     d12:	bb 27       	eor	r27, r27
     d14:	66 27       	eor	r22, r22
     d16:	77 27       	eor	r23, r23
     d18:	cb 01       	movw	r24, r22
     d1a:	97 f9       	bld	r25, 7
     d1c:	08 95       	ret

00000d1e <__mulsf3>:
     d1e:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3x>
     d22:	0c 94 55 06 	jmp	0xcaa	; 0xcaa <__fp_round>
     d26:	0e 94 47 06 	call	0xc8e	; 0xc8e <__fp_pscA>
     d2a:	38 f0       	brcs	.+14     	; 0xd3a <__mulsf3+0x1c>
     d2c:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__fp_pscB>
     d30:	20 f0       	brcs	.+8      	; 0xd3a <__mulsf3+0x1c>
     d32:	95 23       	and	r25, r21
     d34:	11 f0       	breq	.+4      	; 0xd3a <__mulsf3+0x1c>
     d36:	0c 94 3e 06 	jmp	0xc7c	; 0xc7c <__fp_inf>
     d3a:	0c 94 44 06 	jmp	0xc88	; 0xc88 <__fp_nan>
     d3e:	11 24       	eor	r1, r1
     d40:	0c 94 89 06 	jmp	0xd12	; 0xd12 <__fp_szero>

00000d44 <__mulsf3x>:
     d44:	0e 94 66 06 	call	0xccc	; 0xccc <__fp_split3>
     d48:	70 f3       	brcs	.-36     	; 0xd26 <__mulsf3+0x8>

00000d4a <__mulsf3_pse>:
     d4a:	95 9f       	mul	r25, r21
     d4c:	c1 f3       	breq	.-16     	; 0xd3e <__mulsf3+0x20>
     d4e:	95 0f       	add	r25, r21
     d50:	50 e0       	ldi	r21, 0x00	; 0
     d52:	55 1f       	adc	r21, r21
     d54:	62 9f       	mul	r22, r18
     d56:	f0 01       	movw	r30, r0
     d58:	72 9f       	mul	r23, r18
     d5a:	bb 27       	eor	r27, r27
     d5c:	f0 0d       	add	r31, r0
     d5e:	b1 1d       	adc	r27, r1
     d60:	63 9f       	mul	r22, r19
     d62:	aa 27       	eor	r26, r26
     d64:	f0 0d       	add	r31, r0
     d66:	b1 1d       	adc	r27, r1
     d68:	aa 1f       	adc	r26, r26
     d6a:	64 9f       	mul	r22, r20
     d6c:	66 27       	eor	r22, r22
     d6e:	b0 0d       	add	r27, r0
     d70:	a1 1d       	adc	r26, r1
     d72:	66 1f       	adc	r22, r22
     d74:	82 9f       	mul	r24, r18
     d76:	22 27       	eor	r18, r18
     d78:	b0 0d       	add	r27, r0
     d7a:	a1 1d       	adc	r26, r1
     d7c:	62 1f       	adc	r22, r18
     d7e:	73 9f       	mul	r23, r19
     d80:	b0 0d       	add	r27, r0
     d82:	a1 1d       	adc	r26, r1
     d84:	62 1f       	adc	r22, r18
     d86:	83 9f       	mul	r24, r19
     d88:	a0 0d       	add	r26, r0
     d8a:	61 1d       	adc	r22, r1
     d8c:	22 1f       	adc	r18, r18
     d8e:	74 9f       	mul	r23, r20
     d90:	33 27       	eor	r19, r19
     d92:	a0 0d       	add	r26, r0
     d94:	61 1d       	adc	r22, r1
     d96:	23 1f       	adc	r18, r19
     d98:	84 9f       	mul	r24, r20
     d9a:	60 0d       	add	r22, r0
     d9c:	21 1d       	adc	r18, r1
     d9e:	82 2f       	mov	r24, r18
     da0:	76 2f       	mov	r23, r22
     da2:	6a 2f       	mov	r22, r26
     da4:	11 24       	eor	r1, r1
     da6:	9f 57       	subi	r25, 0x7F	; 127
     da8:	50 40       	sbci	r21, 0x00	; 0
     daa:	9a f0       	brmi	.+38     	; 0xdd2 <__mulsf3_pse+0x88>
     dac:	f1 f0       	breq	.+60     	; 0xdea <__mulsf3_pse+0xa0>
     dae:	88 23       	and	r24, r24
     db0:	4a f0       	brmi	.+18     	; 0xdc4 <__mulsf3_pse+0x7a>
     db2:	ee 0f       	add	r30, r30
     db4:	ff 1f       	adc	r31, r31
     db6:	bb 1f       	adc	r27, r27
     db8:	66 1f       	adc	r22, r22
     dba:	77 1f       	adc	r23, r23
     dbc:	88 1f       	adc	r24, r24
     dbe:	91 50       	subi	r25, 0x01	; 1
     dc0:	50 40       	sbci	r21, 0x00	; 0
     dc2:	a9 f7       	brne	.-22     	; 0xdae <__mulsf3_pse+0x64>
     dc4:	9e 3f       	cpi	r25, 0xFE	; 254
     dc6:	51 05       	cpc	r21, r1
     dc8:	80 f0       	brcs	.+32     	; 0xdea <__mulsf3_pse+0xa0>
     dca:	0c 94 3e 06 	jmp	0xc7c	; 0xc7c <__fp_inf>
     dce:	0c 94 89 06 	jmp	0xd12	; 0xd12 <__fp_szero>
     dd2:	5f 3f       	cpi	r21, 0xFF	; 255
     dd4:	e4 f3       	brlt	.-8      	; 0xdce <__mulsf3_pse+0x84>
     dd6:	98 3e       	cpi	r25, 0xE8	; 232
     dd8:	d4 f3       	brlt	.-12     	; 0xdce <__mulsf3_pse+0x84>
     dda:	86 95       	lsr	r24
     ddc:	77 95       	ror	r23
     dde:	67 95       	ror	r22
     de0:	b7 95       	ror	r27
     de2:	f7 95       	ror	r31
     de4:	e7 95       	ror	r30
     de6:	9f 5f       	subi	r25, 0xFF	; 255
     de8:	c1 f7       	brne	.-16     	; 0xdda <__mulsf3_pse+0x90>
     dea:	fe 2b       	or	r31, r30
     dec:	88 0f       	add	r24, r24
     dee:	91 1d       	adc	r25, r1
     df0:	96 95       	lsr	r25
     df2:	87 95       	ror	r24
     df4:	97 f9       	bld	r25, 7
     df6:	08 95       	ret

00000df8 <__divmodhi4>:
     df8:	97 fb       	bst	r25, 7
     dfa:	07 2e       	mov	r0, r23
     dfc:	16 f4       	brtc	.+4      	; 0xe02 <__divmodhi4+0xa>
     dfe:	00 94       	com	r0
     e00:	07 d0       	rcall	.+14     	; 0xe10 <__divmodhi4_neg1>
     e02:	77 fd       	sbrc	r23, 7
     e04:	09 d0       	rcall	.+18     	; 0xe18 <__divmodhi4_neg2>
     e06:	0e 94 32 07 	call	0xe64	; 0xe64 <__udivmodhi4>
     e0a:	07 fc       	sbrc	r0, 7
     e0c:	05 d0       	rcall	.+10     	; 0xe18 <__divmodhi4_neg2>
     e0e:	3e f4       	brtc	.+14     	; 0xe1e <__divmodhi4_exit>

00000e10 <__divmodhi4_neg1>:
     e10:	90 95       	com	r25
     e12:	81 95       	neg	r24
     e14:	9f 4f       	sbci	r25, 0xFF	; 255
     e16:	08 95       	ret

00000e18 <__divmodhi4_neg2>:
     e18:	70 95       	com	r23
     e1a:	61 95       	neg	r22
     e1c:	7f 4f       	sbci	r23, 0xFF	; 255

00000e1e <__divmodhi4_exit>:
     e1e:	08 95       	ret

00000e20 <__udivmodsi4>:
     e20:	a1 e2       	ldi	r26, 0x21	; 33
     e22:	1a 2e       	mov	r1, r26
     e24:	aa 1b       	sub	r26, r26
     e26:	bb 1b       	sub	r27, r27
     e28:	fd 01       	movw	r30, r26
     e2a:	0d c0       	rjmp	.+26     	; 0xe46 <__udivmodsi4_ep>

00000e2c <__udivmodsi4_loop>:
     e2c:	aa 1f       	adc	r26, r26
     e2e:	bb 1f       	adc	r27, r27
     e30:	ee 1f       	adc	r30, r30
     e32:	ff 1f       	adc	r31, r31
     e34:	a2 17       	cp	r26, r18
     e36:	b3 07       	cpc	r27, r19
     e38:	e4 07       	cpc	r30, r20
     e3a:	f5 07       	cpc	r31, r21
     e3c:	20 f0       	brcs	.+8      	; 0xe46 <__udivmodsi4_ep>
     e3e:	a2 1b       	sub	r26, r18
     e40:	b3 0b       	sbc	r27, r19
     e42:	e4 0b       	sbc	r30, r20
     e44:	f5 0b       	sbc	r31, r21

00000e46 <__udivmodsi4_ep>:
     e46:	66 1f       	adc	r22, r22
     e48:	77 1f       	adc	r23, r23
     e4a:	88 1f       	adc	r24, r24
     e4c:	99 1f       	adc	r25, r25
     e4e:	1a 94       	dec	r1
     e50:	69 f7       	brne	.-38     	; 0xe2c <__udivmodsi4_loop>
     e52:	60 95       	com	r22
     e54:	70 95       	com	r23
     e56:	80 95       	com	r24
     e58:	90 95       	com	r25
     e5a:	9b 01       	movw	r18, r22
     e5c:	ac 01       	movw	r20, r24
     e5e:	bd 01       	movw	r22, r26
     e60:	cf 01       	movw	r24, r30
     e62:	08 95       	ret

00000e64 <__udivmodhi4>:
     e64:	aa 1b       	sub	r26, r26
     e66:	bb 1b       	sub	r27, r27
     e68:	51 e1       	ldi	r21, 0x11	; 17
     e6a:	07 c0       	rjmp	.+14     	; 0xe7a <__udivmodhi4_ep>

00000e6c <__udivmodhi4_loop>:
     e6c:	aa 1f       	adc	r26, r26
     e6e:	bb 1f       	adc	r27, r27
     e70:	a6 17       	cp	r26, r22
     e72:	b7 07       	cpc	r27, r23
     e74:	10 f0       	brcs	.+4      	; 0xe7a <__udivmodhi4_ep>
     e76:	a6 1b       	sub	r26, r22
     e78:	b7 0b       	sbc	r27, r23

00000e7a <__udivmodhi4_ep>:
     e7a:	88 1f       	adc	r24, r24
     e7c:	99 1f       	adc	r25, r25
     e7e:	5a 95       	dec	r21
     e80:	a9 f7       	brne	.-22     	; 0xe6c <__udivmodhi4_loop>
     e82:	80 95       	com	r24
     e84:	90 95       	com	r25
     e86:	bc 01       	movw	r22, r24
     e88:	cd 01       	movw	r24, r26
     e8a:	08 95       	ret

00000e8c <atoi>:
     e8c:	fc 01       	movw	r30, r24
     e8e:	88 27       	eor	r24, r24
     e90:	99 27       	eor	r25, r25
     e92:	e8 94       	clt
     e94:	21 91       	ld	r18, Z+
     e96:	20 32       	cpi	r18, 0x20	; 32
     e98:	e9 f3       	breq	.-6      	; 0xe94 <atoi+0x8>
     e9a:	29 30       	cpi	r18, 0x09	; 9
     e9c:	10 f0       	brcs	.+4      	; 0xea2 <atoi+0x16>
     e9e:	2e 30       	cpi	r18, 0x0E	; 14
     ea0:	c8 f3       	brcs	.-14     	; 0xe94 <atoi+0x8>
     ea2:	2b 32       	cpi	r18, 0x2B	; 43
     ea4:	41 f0       	breq	.+16     	; 0xeb6 <atoi+0x2a>
     ea6:	2d 32       	cpi	r18, 0x2D	; 45
     ea8:	39 f4       	brne	.+14     	; 0xeb8 <atoi+0x2c>
     eaa:	68 94       	set
     eac:	04 c0       	rjmp	.+8      	; 0xeb6 <atoi+0x2a>
     eae:	0e 94 78 07 	call	0xef0	; 0xef0 <__mulhi_const_10>
     eb2:	82 0f       	add	r24, r18
     eb4:	91 1d       	adc	r25, r1
     eb6:	21 91       	ld	r18, Z+
     eb8:	20 53       	subi	r18, 0x30	; 48
     eba:	2a 30       	cpi	r18, 0x0A	; 10
     ebc:	c0 f3       	brcs	.-16     	; 0xeae <atoi+0x22>
     ebe:	1e f4       	brtc	.+6      	; 0xec6 <atoi+0x3a>
     ec0:	90 95       	com	r25
     ec2:	81 95       	neg	r24
     ec4:	9f 4f       	sbci	r25, 0xFF	; 255
     ec6:	08 95       	ret

00000ec8 <strcmp>:
     ec8:	fb 01       	movw	r30, r22
     eca:	dc 01       	movw	r26, r24
     ecc:	8d 91       	ld	r24, X+
     ece:	01 90       	ld	r0, Z+
     ed0:	80 19       	sub	r24, r0
     ed2:	01 10       	cpse	r0, r1
     ed4:	d9 f3       	breq	.-10     	; 0xecc <strcmp+0x4>
     ed6:	99 0b       	sbc	r25, r25
     ed8:	08 95       	ret

00000eda <__itoa_ncheck>:
     eda:	bb 27       	eor	r27, r27
     edc:	4a 30       	cpi	r20, 0x0A	; 10
     ede:	31 f4       	brne	.+12     	; 0xeec <__itoa_ncheck+0x12>
     ee0:	99 23       	and	r25, r25
     ee2:	22 f4       	brpl	.+8      	; 0xeec <__itoa_ncheck+0x12>
     ee4:	bd e2       	ldi	r27, 0x2D	; 45
     ee6:	90 95       	com	r25
     ee8:	81 95       	neg	r24
     eea:	9f 4f       	sbci	r25, 0xFF	; 255
     eec:	0c 94 81 07 	jmp	0xf02	; 0xf02 <__utoa_common>

00000ef0 <__mulhi_const_10>:
     ef0:	7a e0       	ldi	r23, 0x0A	; 10
     ef2:	97 9f       	mul	r25, r23
     ef4:	90 2d       	mov	r25, r0
     ef6:	87 9f       	mul	r24, r23
     ef8:	80 2d       	mov	r24, r0
     efa:	91 0d       	add	r25, r1
     efc:	11 24       	eor	r1, r1
     efe:	08 95       	ret

00000f00 <__utoa_ncheck>:
     f00:	bb 27       	eor	r27, r27

00000f02 <__utoa_common>:
     f02:	fb 01       	movw	r30, r22
     f04:	55 27       	eor	r21, r21
     f06:	aa 27       	eor	r26, r26
     f08:	88 0f       	add	r24, r24
     f0a:	99 1f       	adc	r25, r25
     f0c:	aa 1f       	adc	r26, r26
     f0e:	a4 17       	cp	r26, r20
     f10:	10 f0       	brcs	.+4      	; 0xf16 <__utoa_common+0x14>
     f12:	a4 1b       	sub	r26, r20
     f14:	83 95       	inc	r24
     f16:	50 51       	subi	r21, 0x10	; 16
     f18:	b9 f7       	brne	.-18     	; 0xf08 <__utoa_common+0x6>
     f1a:	a0 5d       	subi	r26, 0xD0	; 208
     f1c:	aa 33       	cpi	r26, 0x3A	; 58
     f1e:	08 f0       	brcs	.+2      	; 0xf22 <__utoa_common+0x20>
     f20:	a9 5d       	subi	r26, 0xD9	; 217
     f22:	a1 93       	st	Z+, r26
     f24:	00 97       	sbiw	r24, 0x00	; 0
     f26:	79 f7       	brne	.-34     	; 0xf06 <__utoa_common+0x4>
     f28:	b1 11       	cpse	r27, r1
     f2a:	b1 93       	st	Z+, r27
     f2c:	11 92       	st	Z+, r1
     f2e:	cb 01       	movw	r24, r22
     f30:	0c 94 6d 0b 	jmp	0x16da	; 0x16da <strrev>

00000f34 <fdevopen>:
     f34:	0f 93       	push	r16
     f36:	1f 93       	push	r17
     f38:	cf 93       	push	r28
     f3a:	df 93       	push	r29
     f3c:	00 97       	sbiw	r24, 0x00	; 0
     f3e:	31 f4       	brne	.+12     	; 0xf4c <fdevopen+0x18>
     f40:	61 15       	cp	r22, r1
     f42:	71 05       	cpc	r23, r1
     f44:	19 f4       	brne	.+6      	; 0xf4c <fdevopen+0x18>
     f46:	80 e0       	ldi	r24, 0x00	; 0
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	3a c0       	rjmp	.+116    	; 0xfc0 <fdevopen+0x8c>
     f4c:	8b 01       	movw	r16, r22
     f4e:	ec 01       	movw	r28, r24
     f50:	6e e0       	ldi	r22, 0x0E	; 14
     f52:	70 e0       	ldi	r23, 0x00	; 0
     f54:	81 e0       	ldi	r24, 0x01	; 1
     f56:	90 e0       	ldi	r25, 0x00	; 0
     f58:	0e 94 13 0a 	call	0x1426	; 0x1426 <calloc>
     f5c:	fc 01       	movw	r30, r24
     f5e:	89 2b       	or	r24, r25
     f60:	91 f3       	breq	.-28     	; 0xf46 <fdevopen+0x12>
     f62:	80 e8       	ldi	r24, 0x80	; 128
     f64:	83 83       	std	Z+3, r24	; 0x03
     f66:	01 15       	cp	r16, r1
     f68:	11 05       	cpc	r17, r1
     f6a:	71 f0       	breq	.+28     	; 0xf88 <fdevopen+0x54>
     f6c:	13 87       	std	Z+11, r17	; 0x0b
     f6e:	02 87       	std	Z+10, r16	; 0x0a
     f70:	81 e8       	ldi	r24, 0x81	; 129
     f72:	83 83       	std	Z+3, r24	; 0x03
     f74:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <__iob>
     f78:	90 91 23 04 	lds	r25, 0x0423	; 0x800423 <__iob+0x1>
     f7c:	89 2b       	or	r24, r25
     f7e:	21 f4       	brne	.+8      	; 0xf88 <fdevopen+0x54>
     f80:	f0 93 23 04 	sts	0x0423, r31	; 0x800423 <__iob+0x1>
     f84:	e0 93 22 04 	sts	0x0422, r30	; 0x800422 <__iob>
     f88:	20 97       	sbiw	r28, 0x00	; 0
     f8a:	c9 f0       	breq	.+50     	; 0xfbe <fdevopen+0x8a>
     f8c:	d1 87       	std	Z+9, r29	; 0x09
     f8e:	c0 87       	std	Z+8, r28	; 0x08
     f90:	83 81       	ldd	r24, Z+3	; 0x03
     f92:	82 60       	ori	r24, 0x02	; 2
     f94:	83 83       	std	Z+3, r24	; 0x03
     f96:	80 91 24 04 	lds	r24, 0x0424	; 0x800424 <__iob+0x2>
     f9a:	90 91 25 04 	lds	r25, 0x0425	; 0x800425 <__iob+0x3>
     f9e:	89 2b       	or	r24, r25
     fa0:	71 f4       	brne	.+28     	; 0xfbe <fdevopen+0x8a>
     fa2:	f0 93 25 04 	sts	0x0425, r31	; 0x800425 <__iob+0x3>
     fa6:	e0 93 24 04 	sts	0x0424, r30	; 0x800424 <__iob+0x2>
     faa:	80 91 26 04 	lds	r24, 0x0426	; 0x800426 <__iob+0x4>
     fae:	90 91 27 04 	lds	r25, 0x0427	; 0x800427 <__iob+0x5>
     fb2:	89 2b       	or	r24, r25
     fb4:	21 f4       	brne	.+8      	; 0xfbe <fdevopen+0x8a>
     fb6:	f0 93 27 04 	sts	0x0427, r31	; 0x800427 <__iob+0x5>
     fba:	e0 93 26 04 	sts	0x0426, r30	; 0x800426 <__iob+0x4>
     fbe:	cf 01       	movw	r24, r30
     fc0:	df 91       	pop	r29
     fc2:	cf 91       	pop	r28
     fc4:	1f 91       	pop	r17
     fc6:	0f 91       	pop	r16
     fc8:	08 95       	ret

00000fca <printf>:
     fca:	a0 e0       	ldi	r26, 0x00	; 0
     fcc:	b0 e0       	ldi	r27, 0x00	; 0
     fce:	eb ee       	ldi	r30, 0xEB	; 235
     fd0:	f7 e0       	ldi	r31, 0x07	; 7
     fd2:	0c 94 27 0c 	jmp	0x184e	; 0x184e <__prologue_saves__+0x20>
     fd6:	ae 01       	movw	r20, r28
     fd8:	4b 5f       	subi	r20, 0xFB	; 251
     fda:	5f 4f       	sbci	r21, 0xFF	; 255
     fdc:	fa 01       	movw	r30, r20
     fde:	61 91       	ld	r22, Z+
     fe0:	71 91       	ld	r23, Z+
     fe2:	af 01       	movw	r20, r30
     fe4:	80 91 24 04 	lds	r24, 0x0424	; 0x800424 <__iob+0x2>
     fe8:	90 91 25 04 	lds	r25, 0x0425	; 0x800425 <__iob+0x3>
     fec:	0e 94 32 08 	call	0x1064	; 0x1064 <vfprintf>
     ff0:	e2 e0       	ldi	r30, 0x02	; 2
     ff2:	0c 94 43 0c 	jmp	0x1886	; 0x1886 <__epilogue_restores__+0x20>

00000ff6 <putchar>:
     ff6:	60 91 24 04 	lds	r22, 0x0424	; 0x800424 <__iob+0x2>
     ffa:	70 91 25 04 	lds	r23, 0x0425	; 0x800425 <__iob+0x3>
     ffe:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <fputc>
    1002:	08 95       	ret

00001004 <puts>:
    1004:	0f 93       	push	r16
    1006:	1f 93       	push	r17
    1008:	cf 93       	push	r28
    100a:	df 93       	push	r29
    100c:	e0 91 24 04 	lds	r30, 0x0424	; 0x800424 <__iob+0x2>
    1010:	f0 91 25 04 	lds	r31, 0x0425	; 0x800425 <__iob+0x3>
    1014:	23 81       	ldd	r18, Z+3	; 0x03
    1016:	21 ff       	sbrs	r18, 1
    1018:	1b c0       	rjmp	.+54     	; 0x1050 <puts+0x4c>
    101a:	8c 01       	movw	r16, r24
    101c:	d0 e0       	ldi	r29, 0x00	; 0
    101e:	c0 e0       	ldi	r28, 0x00	; 0
    1020:	f8 01       	movw	r30, r16
    1022:	81 91       	ld	r24, Z+
    1024:	8f 01       	movw	r16, r30
    1026:	60 91 24 04 	lds	r22, 0x0424	; 0x800424 <__iob+0x2>
    102a:	70 91 25 04 	lds	r23, 0x0425	; 0x800425 <__iob+0x3>
    102e:	db 01       	movw	r26, r22
    1030:	18 96       	adiw	r26, 0x08	; 8
    1032:	ed 91       	ld	r30, X+
    1034:	fc 91       	ld	r31, X
    1036:	19 97       	sbiw	r26, 0x09	; 9
    1038:	88 23       	and	r24, r24
    103a:	31 f0       	breq	.+12     	; 0x1048 <puts+0x44>
    103c:	09 95       	icall
    103e:	89 2b       	or	r24, r25
    1040:	79 f3       	breq	.-34     	; 0x1020 <puts+0x1c>
    1042:	df ef       	ldi	r29, 0xFF	; 255
    1044:	cf ef       	ldi	r28, 0xFF	; 255
    1046:	ec cf       	rjmp	.-40     	; 0x1020 <puts+0x1c>
    1048:	8a e0       	ldi	r24, 0x0A	; 10
    104a:	09 95       	icall
    104c:	89 2b       	or	r24, r25
    104e:	19 f0       	breq	.+6      	; 0x1056 <puts+0x52>
    1050:	8f ef       	ldi	r24, 0xFF	; 255
    1052:	9f ef       	ldi	r25, 0xFF	; 255
    1054:	02 c0       	rjmp	.+4      	; 0x105a <puts+0x56>
    1056:	8d 2f       	mov	r24, r29
    1058:	9c 2f       	mov	r25, r28
    105a:	df 91       	pop	r29
    105c:	cf 91       	pop	r28
    105e:	1f 91       	pop	r17
    1060:	0f 91       	pop	r16
    1062:	08 95       	ret

00001064 <vfprintf>:
    1064:	ab e0       	ldi	r26, 0x0B	; 11
    1066:	b0 e0       	ldi	r27, 0x00	; 0
    1068:	e8 e3       	ldi	r30, 0x38	; 56
    106a:	f8 e0       	ldi	r31, 0x08	; 8
    106c:	0c 94 17 0c 	jmp	0x182e	; 0x182e <__prologue_saves__>
    1070:	6c 01       	movw	r12, r24
    1072:	7b 01       	movw	r14, r22
    1074:	8a 01       	movw	r16, r20
    1076:	fc 01       	movw	r30, r24
    1078:	17 82       	std	Z+7, r1	; 0x07
    107a:	16 82       	std	Z+6, r1	; 0x06
    107c:	83 81       	ldd	r24, Z+3	; 0x03
    107e:	81 ff       	sbrs	r24, 1
    1080:	cc c1       	rjmp	.+920    	; 0x141a <vfprintf+0x3b6>
    1082:	ce 01       	movw	r24, r28
    1084:	01 96       	adiw	r24, 0x01	; 1
    1086:	3c 01       	movw	r6, r24
    1088:	f6 01       	movw	r30, r12
    108a:	93 81       	ldd	r25, Z+3	; 0x03
    108c:	f7 01       	movw	r30, r14
    108e:	93 fd       	sbrc	r25, 3
    1090:	85 91       	lpm	r24, Z+
    1092:	93 ff       	sbrs	r25, 3
    1094:	81 91       	ld	r24, Z+
    1096:	7f 01       	movw	r14, r30
    1098:	88 23       	and	r24, r24
    109a:	09 f4       	brne	.+2      	; 0x109e <vfprintf+0x3a>
    109c:	ba c1       	rjmp	.+884    	; 0x1412 <vfprintf+0x3ae>
    109e:	85 32       	cpi	r24, 0x25	; 37
    10a0:	39 f4       	brne	.+14     	; 0x10b0 <vfprintf+0x4c>
    10a2:	93 fd       	sbrc	r25, 3
    10a4:	85 91       	lpm	r24, Z+
    10a6:	93 ff       	sbrs	r25, 3
    10a8:	81 91       	ld	r24, Z+
    10aa:	7f 01       	movw	r14, r30
    10ac:	85 32       	cpi	r24, 0x25	; 37
    10ae:	29 f4       	brne	.+10     	; 0x10ba <vfprintf+0x56>
    10b0:	b6 01       	movw	r22, r12
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <fputc>
    10b8:	e7 cf       	rjmp	.-50     	; 0x1088 <vfprintf+0x24>
    10ba:	91 2c       	mov	r9, r1
    10bc:	21 2c       	mov	r2, r1
    10be:	31 2c       	mov	r3, r1
    10c0:	ff e1       	ldi	r31, 0x1F	; 31
    10c2:	f3 15       	cp	r31, r3
    10c4:	d8 f0       	brcs	.+54     	; 0x10fc <vfprintf+0x98>
    10c6:	8b 32       	cpi	r24, 0x2B	; 43
    10c8:	79 f0       	breq	.+30     	; 0x10e8 <vfprintf+0x84>
    10ca:	38 f4       	brcc	.+14     	; 0x10da <vfprintf+0x76>
    10cc:	80 32       	cpi	r24, 0x20	; 32
    10ce:	79 f0       	breq	.+30     	; 0x10ee <vfprintf+0x8a>
    10d0:	83 32       	cpi	r24, 0x23	; 35
    10d2:	a1 f4       	brne	.+40     	; 0x10fc <vfprintf+0x98>
    10d4:	23 2d       	mov	r18, r3
    10d6:	20 61       	ori	r18, 0x10	; 16
    10d8:	1d c0       	rjmp	.+58     	; 0x1114 <vfprintf+0xb0>
    10da:	8d 32       	cpi	r24, 0x2D	; 45
    10dc:	61 f0       	breq	.+24     	; 0x10f6 <vfprintf+0x92>
    10de:	80 33       	cpi	r24, 0x30	; 48
    10e0:	69 f4       	brne	.+26     	; 0x10fc <vfprintf+0x98>
    10e2:	23 2d       	mov	r18, r3
    10e4:	21 60       	ori	r18, 0x01	; 1
    10e6:	16 c0       	rjmp	.+44     	; 0x1114 <vfprintf+0xb0>
    10e8:	83 2d       	mov	r24, r3
    10ea:	82 60       	ori	r24, 0x02	; 2
    10ec:	38 2e       	mov	r3, r24
    10ee:	e3 2d       	mov	r30, r3
    10f0:	e4 60       	ori	r30, 0x04	; 4
    10f2:	3e 2e       	mov	r3, r30
    10f4:	2a c0       	rjmp	.+84     	; 0x114a <vfprintf+0xe6>
    10f6:	f3 2d       	mov	r31, r3
    10f8:	f8 60       	ori	r31, 0x08	; 8
    10fa:	1d c0       	rjmp	.+58     	; 0x1136 <vfprintf+0xd2>
    10fc:	37 fc       	sbrc	r3, 7
    10fe:	2d c0       	rjmp	.+90     	; 0x115a <vfprintf+0xf6>
    1100:	20 ed       	ldi	r18, 0xD0	; 208
    1102:	28 0f       	add	r18, r24
    1104:	2a 30       	cpi	r18, 0x0A	; 10
    1106:	40 f0       	brcs	.+16     	; 0x1118 <vfprintf+0xb4>
    1108:	8e 32       	cpi	r24, 0x2E	; 46
    110a:	b9 f4       	brne	.+46     	; 0x113a <vfprintf+0xd6>
    110c:	36 fc       	sbrc	r3, 6
    110e:	81 c1       	rjmp	.+770    	; 0x1412 <vfprintf+0x3ae>
    1110:	23 2d       	mov	r18, r3
    1112:	20 64       	ori	r18, 0x40	; 64
    1114:	32 2e       	mov	r3, r18
    1116:	19 c0       	rjmp	.+50     	; 0x114a <vfprintf+0xe6>
    1118:	36 fe       	sbrs	r3, 6
    111a:	06 c0       	rjmp	.+12     	; 0x1128 <vfprintf+0xc4>
    111c:	8a e0       	ldi	r24, 0x0A	; 10
    111e:	98 9e       	mul	r9, r24
    1120:	20 0d       	add	r18, r0
    1122:	11 24       	eor	r1, r1
    1124:	92 2e       	mov	r9, r18
    1126:	11 c0       	rjmp	.+34     	; 0x114a <vfprintf+0xe6>
    1128:	ea e0       	ldi	r30, 0x0A	; 10
    112a:	2e 9e       	mul	r2, r30
    112c:	20 0d       	add	r18, r0
    112e:	11 24       	eor	r1, r1
    1130:	22 2e       	mov	r2, r18
    1132:	f3 2d       	mov	r31, r3
    1134:	f0 62       	ori	r31, 0x20	; 32
    1136:	3f 2e       	mov	r3, r31
    1138:	08 c0       	rjmp	.+16     	; 0x114a <vfprintf+0xe6>
    113a:	8c 36       	cpi	r24, 0x6C	; 108
    113c:	21 f4       	brne	.+8      	; 0x1146 <vfprintf+0xe2>
    113e:	83 2d       	mov	r24, r3
    1140:	80 68       	ori	r24, 0x80	; 128
    1142:	38 2e       	mov	r3, r24
    1144:	02 c0       	rjmp	.+4      	; 0x114a <vfprintf+0xe6>
    1146:	88 36       	cpi	r24, 0x68	; 104
    1148:	41 f4       	brne	.+16     	; 0x115a <vfprintf+0xf6>
    114a:	f7 01       	movw	r30, r14
    114c:	93 fd       	sbrc	r25, 3
    114e:	85 91       	lpm	r24, Z+
    1150:	93 ff       	sbrs	r25, 3
    1152:	81 91       	ld	r24, Z+
    1154:	7f 01       	movw	r14, r30
    1156:	81 11       	cpse	r24, r1
    1158:	b3 cf       	rjmp	.-154    	; 0x10c0 <vfprintf+0x5c>
    115a:	98 2f       	mov	r25, r24
    115c:	9f 7d       	andi	r25, 0xDF	; 223
    115e:	95 54       	subi	r25, 0x45	; 69
    1160:	93 30       	cpi	r25, 0x03	; 3
    1162:	28 f4       	brcc	.+10     	; 0x116e <vfprintf+0x10a>
    1164:	0c 5f       	subi	r16, 0xFC	; 252
    1166:	1f 4f       	sbci	r17, 0xFF	; 255
    1168:	9f e3       	ldi	r25, 0x3F	; 63
    116a:	99 83       	std	Y+1, r25	; 0x01
    116c:	0d c0       	rjmp	.+26     	; 0x1188 <vfprintf+0x124>
    116e:	83 36       	cpi	r24, 0x63	; 99
    1170:	31 f0       	breq	.+12     	; 0x117e <vfprintf+0x11a>
    1172:	83 37       	cpi	r24, 0x73	; 115
    1174:	71 f0       	breq	.+28     	; 0x1192 <vfprintf+0x12e>
    1176:	83 35       	cpi	r24, 0x53	; 83
    1178:	09 f0       	breq	.+2      	; 0x117c <vfprintf+0x118>
    117a:	59 c0       	rjmp	.+178    	; 0x122e <vfprintf+0x1ca>
    117c:	21 c0       	rjmp	.+66     	; 0x11c0 <vfprintf+0x15c>
    117e:	f8 01       	movw	r30, r16
    1180:	80 81       	ld	r24, Z
    1182:	89 83       	std	Y+1, r24	; 0x01
    1184:	0e 5f       	subi	r16, 0xFE	; 254
    1186:	1f 4f       	sbci	r17, 0xFF	; 255
    1188:	88 24       	eor	r8, r8
    118a:	83 94       	inc	r8
    118c:	91 2c       	mov	r9, r1
    118e:	53 01       	movw	r10, r6
    1190:	13 c0       	rjmp	.+38     	; 0x11b8 <vfprintf+0x154>
    1192:	28 01       	movw	r4, r16
    1194:	f2 e0       	ldi	r31, 0x02	; 2
    1196:	4f 0e       	add	r4, r31
    1198:	51 1c       	adc	r5, r1
    119a:	f8 01       	movw	r30, r16
    119c:	a0 80       	ld	r10, Z
    119e:	b1 80       	ldd	r11, Z+1	; 0x01
    11a0:	36 fe       	sbrs	r3, 6
    11a2:	03 c0       	rjmp	.+6      	; 0x11aa <vfprintf+0x146>
    11a4:	69 2d       	mov	r22, r9
    11a6:	70 e0       	ldi	r23, 0x00	; 0
    11a8:	02 c0       	rjmp	.+4      	; 0x11ae <vfprintf+0x14a>
    11aa:	6f ef       	ldi	r22, 0xFF	; 255
    11ac:	7f ef       	ldi	r23, 0xFF	; 255
    11ae:	c5 01       	movw	r24, r10
    11b0:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <strnlen>
    11b4:	4c 01       	movw	r8, r24
    11b6:	82 01       	movw	r16, r4
    11b8:	f3 2d       	mov	r31, r3
    11ba:	ff 77       	andi	r31, 0x7F	; 127
    11bc:	3f 2e       	mov	r3, r31
    11be:	16 c0       	rjmp	.+44     	; 0x11ec <vfprintf+0x188>
    11c0:	28 01       	movw	r4, r16
    11c2:	22 e0       	ldi	r18, 0x02	; 2
    11c4:	42 0e       	add	r4, r18
    11c6:	51 1c       	adc	r5, r1
    11c8:	f8 01       	movw	r30, r16
    11ca:	a0 80       	ld	r10, Z
    11cc:	b1 80       	ldd	r11, Z+1	; 0x01
    11ce:	36 fe       	sbrs	r3, 6
    11d0:	03 c0       	rjmp	.+6      	; 0x11d8 <vfprintf+0x174>
    11d2:	69 2d       	mov	r22, r9
    11d4:	70 e0       	ldi	r23, 0x00	; 0
    11d6:	02 c0       	rjmp	.+4      	; 0x11dc <vfprintf+0x178>
    11d8:	6f ef       	ldi	r22, 0xFF	; 255
    11da:	7f ef       	ldi	r23, 0xFF	; 255
    11dc:	c5 01       	movw	r24, r10
    11de:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <strnlen_P>
    11e2:	4c 01       	movw	r8, r24
    11e4:	f3 2d       	mov	r31, r3
    11e6:	f0 68       	ori	r31, 0x80	; 128
    11e8:	3f 2e       	mov	r3, r31
    11ea:	82 01       	movw	r16, r4
    11ec:	33 fc       	sbrc	r3, 3
    11ee:	1b c0       	rjmp	.+54     	; 0x1226 <vfprintf+0x1c2>
    11f0:	82 2d       	mov	r24, r2
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	88 16       	cp	r8, r24
    11f6:	99 06       	cpc	r9, r25
    11f8:	b0 f4       	brcc	.+44     	; 0x1226 <vfprintf+0x1c2>
    11fa:	b6 01       	movw	r22, r12
    11fc:	80 e2       	ldi	r24, 0x20	; 32
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <fputc>
    1204:	2a 94       	dec	r2
    1206:	f4 cf       	rjmp	.-24     	; 0x11f0 <vfprintf+0x18c>
    1208:	f5 01       	movw	r30, r10
    120a:	37 fc       	sbrc	r3, 7
    120c:	85 91       	lpm	r24, Z+
    120e:	37 fe       	sbrs	r3, 7
    1210:	81 91       	ld	r24, Z+
    1212:	5f 01       	movw	r10, r30
    1214:	b6 01       	movw	r22, r12
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <fputc>
    121c:	21 10       	cpse	r2, r1
    121e:	2a 94       	dec	r2
    1220:	21 e0       	ldi	r18, 0x01	; 1
    1222:	82 1a       	sub	r8, r18
    1224:	91 08       	sbc	r9, r1
    1226:	81 14       	cp	r8, r1
    1228:	91 04       	cpc	r9, r1
    122a:	71 f7       	brne	.-36     	; 0x1208 <vfprintf+0x1a4>
    122c:	e8 c0       	rjmp	.+464    	; 0x13fe <vfprintf+0x39a>
    122e:	84 36       	cpi	r24, 0x64	; 100
    1230:	11 f0       	breq	.+4      	; 0x1236 <vfprintf+0x1d2>
    1232:	89 36       	cpi	r24, 0x69	; 105
    1234:	41 f5       	brne	.+80     	; 0x1286 <vfprintf+0x222>
    1236:	f8 01       	movw	r30, r16
    1238:	37 fe       	sbrs	r3, 7
    123a:	07 c0       	rjmp	.+14     	; 0x124a <vfprintf+0x1e6>
    123c:	60 81       	ld	r22, Z
    123e:	71 81       	ldd	r23, Z+1	; 0x01
    1240:	82 81       	ldd	r24, Z+2	; 0x02
    1242:	93 81       	ldd	r25, Z+3	; 0x03
    1244:	0c 5f       	subi	r16, 0xFC	; 252
    1246:	1f 4f       	sbci	r17, 0xFF	; 255
    1248:	08 c0       	rjmp	.+16     	; 0x125a <vfprintf+0x1f6>
    124a:	60 81       	ld	r22, Z
    124c:	71 81       	ldd	r23, Z+1	; 0x01
    124e:	07 2e       	mov	r0, r23
    1250:	00 0c       	add	r0, r0
    1252:	88 0b       	sbc	r24, r24
    1254:	99 0b       	sbc	r25, r25
    1256:	0e 5f       	subi	r16, 0xFE	; 254
    1258:	1f 4f       	sbci	r17, 0xFF	; 255
    125a:	f3 2d       	mov	r31, r3
    125c:	ff 76       	andi	r31, 0x6F	; 111
    125e:	3f 2e       	mov	r3, r31
    1260:	97 ff       	sbrs	r25, 7
    1262:	09 c0       	rjmp	.+18     	; 0x1276 <vfprintf+0x212>
    1264:	90 95       	com	r25
    1266:	80 95       	com	r24
    1268:	70 95       	com	r23
    126a:	61 95       	neg	r22
    126c:	7f 4f       	sbci	r23, 0xFF	; 255
    126e:	8f 4f       	sbci	r24, 0xFF	; 255
    1270:	9f 4f       	sbci	r25, 0xFF	; 255
    1272:	f0 68       	ori	r31, 0x80	; 128
    1274:	3f 2e       	mov	r3, r31
    1276:	2a e0       	ldi	r18, 0x0A	; 10
    1278:	30 e0       	ldi	r19, 0x00	; 0
    127a:	a3 01       	movw	r20, r6
    127c:	0e 94 b9 0b 	call	0x1772	; 0x1772 <__ultoa_invert>
    1280:	88 2e       	mov	r8, r24
    1282:	86 18       	sub	r8, r6
    1284:	45 c0       	rjmp	.+138    	; 0x1310 <vfprintf+0x2ac>
    1286:	85 37       	cpi	r24, 0x75	; 117
    1288:	31 f4       	brne	.+12     	; 0x1296 <vfprintf+0x232>
    128a:	23 2d       	mov	r18, r3
    128c:	2f 7e       	andi	r18, 0xEF	; 239
    128e:	b2 2e       	mov	r11, r18
    1290:	2a e0       	ldi	r18, 0x0A	; 10
    1292:	30 e0       	ldi	r19, 0x00	; 0
    1294:	25 c0       	rjmp	.+74     	; 0x12e0 <vfprintf+0x27c>
    1296:	93 2d       	mov	r25, r3
    1298:	99 7f       	andi	r25, 0xF9	; 249
    129a:	b9 2e       	mov	r11, r25
    129c:	8f 36       	cpi	r24, 0x6F	; 111
    129e:	c1 f0       	breq	.+48     	; 0x12d0 <vfprintf+0x26c>
    12a0:	18 f4       	brcc	.+6      	; 0x12a8 <vfprintf+0x244>
    12a2:	88 35       	cpi	r24, 0x58	; 88
    12a4:	79 f0       	breq	.+30     	; 0x12c4 <vfprintf+0x260>
    12a6:	b5 c0       	rjmp	.+362    	; 0x1412 <vfprintf+0x3ae>
    12a8:	80 37       	cpi	r24, 0x70	; 112
    12aa:	19 f0       	breq	.+6      	; 0x12b2 <vfprintf+0x24e>
    12ac:	88 37       	cpi	r24, 0x78	; 120
    12ae:	21 f0       	breq	.+8      	; 0x12b8 <vfprintf+0x254>
    12b0:	b0 c0       	rjmp	.+352    	; 0x1412 <vfprintf+0x3ae>
    12b2:	e9 2f       	mov	r30, r25
    12b4:	e0 61       	ori	r30, 0x10	; 16
    12b6:	be 2e       	mov	r11, r30
    12b8:	b4 fe       	sbrs	r11, 4
    12ba:	0d c0       	rjmp	.+26     	; 0x12d6 <vfprintf+0x272>
    12bc:	fb 2d       	mov	r31, r11
    12be:	f4 60       	ori	r31, 0x04	; 4
    12c0:	bf 2e       	mov	r11, r31
    12c2:	09 c0       	rjmp	.+18     	; 0x12d6 <vfprintf+0x272>
    12c4:	34 fe       	sbrs	r3, 4
    12c6:	0a c0       	rjmp	.+20     	; 0x12dc <vfprintf+0x278>
    12c8:	29 2f       	mov	r18, r25
    12ca:	26 60       	ori	r18, 0x06	; 6
    12cc:	b2 2e       	mov	r11, r18
    12ce:	06 c0       	rjmp	.+12     	; 0x12dc <vfprintf+0x278>
    12d0:	28 e0       	ldi	r18, 0x08	; 8
    12d2:	30 e0       	ldi	r19, 0x00	; 0
    12d4:	05 c0       	rjmp	.+10     	; 0x12e0 <vfprintf+0x27c>
    12d6:	20 e1       	ldi	r18, 0x10	; 16
    12d8:	30 e0       	ldi	r19, 0x00	; 0
    12da:	02 c0       	rjmp	.+4      	; 0x12e0 <vfprintf+0x27c>
    12dc:	20 e1       	ldi	r18, 0x10	; 16
    12de:	32 e0       	ldi	r19, 0x02	; 2
    12e0:	f8 01       	movw	r30, r16
    12e2:	b7 fe       	sbrs	r11, 7
    12e4:	07 c0       	rjmp	.+14     	; 0x12f4 <vfprintf+0x290>
    12e6:	60 81       	ld	r22, Z
    12e8:	71 81       	ldd	r23, Z+1	; 0x01
    12ea:	82 81       	ldd	r24, Z+2	; 0x02
    12ec:	93 81       	ldd	r25, Z+3	; 0x03
    12ee:	0c 5f       	subi	r16, 0xFC	; 252
    12f0:	1f 4f       	sbci	r17, 0xFF	; 255
    12f2:	06 c0       	rjmp	.+12     	; 0x1300 <vfprintf+0x29c>
    12f4:	60 81       	ld	r22, Z
    12f6:	71 81       	ldd	r23, Z+1	; 0x01
    12f8:	80 e0       	ldi	r24, 0x00	; 0
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	0e 5f       	subi	r16, 0xFE	; 254
    12fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1300:	a3 01       	movw	r20, r6
    1302:	0e 94 b9 0b 	call	0x1772	; 0x1772 <__ultoa_invert>
    1306:	88 2e       	mov	r8, r24
    1308:	86 18       	sub	r8, r6
    130a:	fb 2d       	mov	r31, r11
    130c:	ff 77       	andi	r31, 0x7F	; 127
    130e:	3f 2e       	mov	r3, r31
    1310:	36 fe       	sbrs	r3, 6
    1312:	0d c0       	rjmp	.+26     	; 0x132e <vfprintf+0x2ca>
    1314:	23 2d       	mov	r18, r3
    1316:	2e 7f       	andi	r18, 0xFE	; 254
    1318:	a2 2e       	mov	r10, r18
    131a:	89 14       	cp	r8, r9
    131c:	58 f4       	brcc	.+22     	; 0x1334 <vfprintf+0x2d0>
    131e:	34 fe       	sbrs	r3, 4
    1320:	0b c0       	rjmp	.+22     	; 0x1338 <vfprintf+0x2d4>
    1322:	32 fc       	sbrc	r3, 2
    1324:	09 c0       	rjmp	.+18     	; 0x1338 <vfprintf+0x2d4>
    1326:	83 2d       	mov	r24, r3
    1328:	8e 7e       	andi	r24, 0xEE	; 238
    132a:	a8 2e       	mov	r10, r24
    132c:	05 c0       	rjmp	.+10     	; 0x1338 <vfprintf+0x2d4>
    132e:	b8 2c       	mov	r11, r8
    1330:	a3 2c       	mov	r10, r3
    1332:	03 c0       	rjmp	.+6      	; 0x133a <vfprintf+0x2d6>
    1334:	b8 2c       	mov	r11, r8
    1336:	01 c0       	rjmp	.+2      	; 0x133a <vfprintf+0x2d6>
    1338:	b9 2c       	mov	r11, r9
    133a:	a4 fe       	sbrs	r10, 4
    133c:	0f c0       	rjmp	.+30     	; 0x135c <vfprintf+0x2f8>
    133e:	fe 01       	movw	r30, r28
    1340:	e8 0d       	add	r30, r8
    1342:	f1 1d       	adc	r31, r1
    1344:	80 81       	ld	r24, Z
    1346:	80 33       	cpi	r24, 0x30	; 48
    1348:	21 f4       	brne	.+8      	; 0x1352 <vfprintf+0x2ee>
    134a:	9a 2d       	mov	r25, r10
    134c:	99 7e       	andi	r25, 0xE9	; 233
    134e:	a9 2e       	mov	r10, r25
    1350:	09 c0       	rjmp	.+18     	; 0x1364 <vfprintf+0x300>
    1352:	a2 fe       	sbrs	r10, 2
    1354:	06 c0       	rjmp	.+12     	; 0x1362 <vfprintf+0x2fe>
    1356:	b3 94       	inc	r11
    1358:	b3 94       	inc	r11
    135a:	04 c0       	rjmp	.+8      	; 0x1364 <vfprintf+0x300>
    135c:	8a 2d       	mov	r24, r10
    135e:	86 78       	andi	r24, 0x86	; 134
    1360:	09 f0       	breq	.+2      	; 0x1364 <vfprintf+0x300>
    1362:	b3 94       	inc	r11
    1364:	a3 fc       	sbrc	r10, 3
    1366:	11 c0       	rjmp	.+34     	; 0x138a <vfprintf+0x326>
    1368:	a0 fe       	sbrs	r10, 0
    136a:	06 c0       	rjmp	.+12     	; 0x1378 <vfprintf+0x314>
    136c:	b2 14       	cp	r11, r2
    136e:	88 f4       	brcc	.+34     	; 0x1392 <vfprintf+0x32e>
    1370:	28 0c       	add	r2, r8
    1372:	92 2c       	mov	r9, r2
    1374:	9b 18       	sub	r9, r11
    1376:	0e c0       	rjmp	.+28     	; 0x1394 <vfprintf+0x330>
    1378:	b2 14       	cp	r11, r2
    137a:	60 f4       	brcc	.+24     	; 0x1394 <vfprintf+0x330>
    137c:	b6 01       	movw	r22, r12
    137e:	80 e2       	ldi	r24, 0x20	; 32
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <fputc>
    1386:	b3 94       	inc	r11
    1388:	f7 cf       	rjmp	.-18     	; 0x1378 <vfprintf+0x314>
    138a:	b2 14       	cp	r11, r2
    138c:	18 f4       	brcc	.+6      	; 0x1394 <vfprintf+0x330>
    138e:	2b 18       	sub	r2, r11
    1390:	02 c0       	rjmp	.+4      	; 0x1396 <vfprintf+0x332>
    1392:	98 2c       	mov	r9, r8
    1394:	21 2c       	mov	r2, r1
    1396:	a4 fe       	sbrs	r10, 4
    1398:	10 c0       	rjmp	.+32     	; 0x13ba <vfprintf+0x356>
    139a:	b6 01       	movw	r22, r12
    139c:	80 e3       	ldi	r24, 0x30	; 48
    139e:	90 e0       	ldi	r25, 0x00	; 0
    13a0:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <fputc>
    13a4:	a2 fe       	sbrs	r10, 2
    13a6:	17 c0       	rjmp	.+46     	; 0x13d6 <vfprintf+0x372>
    13a8:	a1 fc       	sbrc	r10, 1
    13aa:	03 c0       	rjmp	.+6      	; 0x13b2 <vfprintf+0x34e>
    13ac:	88 e7       	ldi	r24, 0x78	; 120
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	02 c0       	rjmp	.+4      	; 0x13b6 <vfprintf+0x352>
    13b2:	88 e5       	ldi	r24, 0x58	; 88
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	b6 01       	movw	r22, r12
    13b8:	0c c0       	rjmp	.+24     	; 0x13d2 <vfprintf+0x36e>
    13ba:	8a 2d       	mov	r24, r10
    13bc:	86 78       	andi	r24, 0x86	; 134
    13be:	59 f0       	breq	.+22     	; 0x13d6 <vfprintf+0x372>
    13c0:	a1 fe       	sbrs	r10, 1
    13c2:	02 c0       	rjmp	.+4      	; 0x13c8 <vfprintf+0x364>
    13c4:	8b e2       	ldi	r24, 0x2B	; 43
    13c6:	01 c0       	rjmp	.+2      	; 0x13ca <vfprintf+0x366>
    13c8:	80 e2       	ldi	r24, 0x20	; 32
    13ca:	a7 fc       	sbrc	r10, 7
    13cc:	8d e2       	ldi	r24, 0x2D	; 45
    13ce:	b6 01       	movw	r22, r12
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <fputc>
    13d6:	89 14       	cp	r8, r9
    13d8:	38 f4       	brcc	.+14     	; 0x13e8 <vfprintf+0x384>
    13da:	b6 01       	movw	r22, r12
    13dc:	80 e3       	ldi	r24, 0x30	; 48
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <fputc>
    13e4:	9a 94       	dec	r9
    13e6:	f7 cf       	rjmp	.-18     	; 0x13d6 <vfprintf+0x372>
    13e8:	8a 94       	dec	r8
    13ea:	f3 01       	movw	r30, r6
    13ec:	e8 0d       	add	r30, r8
    13ee:	f1 1d       	adc	r31, r1
    13f0:	80 81       	ld	r24, Z
    13f2:	b6 01       	movw	r22, r12
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <fputc>
    13fa:	81 10       	cpse	r8, r1
    13fc:	f5 cf       	rjmp	.-22     	; 0x13e8 <vfprintf+0x384>
    13fe:	22 20       	and	r2, r2
    1400:	09 f4       	brne	.+2      	; 0x1404 <vfprintf+0x3a0>
    1402:	42 ce       	rjmp	.-892    	; 0x1088 <vfprintf+0x24>
    1404:	b6 01       	movw	r22, r12
    1406:	80 e2       	ldi	r24, 0x20	; 32
    1408:	90 e0       	ldi	r25, 0x00	; 0
    140a:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <fputc>
    140e:	2a 94       	dec	r2
    1410:	f6 cf       	rjmp	.-20     	; 0x13fe <vfprintf+0x39a>
    1412:	f6 01       	movw	r30, r12
    1414:	86 81       	ldd	r24, Z+6	; 0x06
    1416:	97 81       	ldd	r25, Z+7	; 0x07
    1418:	02 c0       	rjmp	.+4      	; 0x141e <vfprintf+0x3ba>
    141a:	8f ef       	ldi	r24, 0xFF	; 255
    141c:	9f ef       	ldi	r25, 0xFF	; 255
    141e:	2b 96       	adiw	r28, 0x0b	; 11
    1420:	e2 e1       	ldi	r30, 0x12	; 18
    1422:	0c 94 33 0c 	jmp	0x1866	; 0x1866 <__epilogue_restores__>

00001426 <calloc>:
    1426:	0f 93       	push	r16
    1428:	1f 93       	push	r17
    142a:	cf 93       	push	r28
    142c:	df 93       	push	r29
    142e:	86 9f       	mul	r24, r22
    1430:	80 01       	movw	r16, r0
    1432:	87 9f       	mul	r24, r23
    1434:	10 0d       	add	r17, r0
    1436:	96 9f       	mul	r25, r22
    1438:	10 0d       	add	r17, r0
    143a:	11 24       	eor	r1, r1
    143c:	c8 01       	movw	r24, r16
    143e:	0e 94 2f 0a 	call	0x145e	; 0x145e <malloc>
    1442:	ec 01       	movw	r28, r24
    1444:	00 97       	sbiw	r24, 0x00	; 0
    1446:	29 f0       	breq	.+10     	; 0x1452 <calloc+0x2c>
    1448:	a8 01       	movw	r20, r16
    144a:	60 e0       	ldi	r22, 0x00	; 0
    144c:	70 e0       	ldi	r23, 0x00	; 0
    144e:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <memset>
    1452:	ce 01       	movw	r24, r28
    1454:	df 91       	pop	r29
    1456:	cf 91       	pop	r28
    1458:	1f 91       	pop	r17
    145a:	0f 91       	pop	r16
    145c:	08 95       	ret

0000145e <malloc>:
    145e:	0f 93       	push	r16
    1460:	1f 93       	push	r17
    1462:	cf 93       	push	r28
    1464:	df 93       	push	r29
    1466:	82 30       	cpi	r24, 0x02	; 2
    1468:	91 05       	cpc	r25, r1
    146a:	10 f4       	brcc	.+4      	; 0x1470 <malloc+0x12>
    146c:	82 e0       	ldi	r24, 0x02	; 2
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	e0 91 2a 04 	lds	r30, 0x042A	; 0x80042a <__flp>
    1474:	f0 91 2b 04 	lds	r31, 0x042B	; 0x80042b <__flp+0x1>
    1478:	20 e0       	ldi	r18, 0x00	; 0
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	a0 e0       	ldi	r26, 0x00	; 0
    147e:	b0 e0       	ldi	r27, 0x00	; 0
    1480:	30 97       	sbiw	r30, 0x00	; 0
    1482:	19 f1       	breq	.+70     	; 0x14ca <malloc+0x6c>
    1484:	40 81       	ld	r20, Z
    1486:	51 81       	ldd	r21, Z+1	; 0x01
    1488:	02 81       	ldd	r16, Z+2	; 0x02
    148a:	13 81       	ldd	r17, Z+3	; 0x03
    148c:	48 17       	cp	r20, r24
    148e:	59 07       	cpc	r21, r25
    1490:	c8 f0       	brcs	.+50     	; 0x14c4 <malloc+0x66>
    1492:	84 17       	cp	r24, r20
    1494:	95 07       	cpc	r25, r21
    1496:	69 f4       	brne	.+26     	; 0x14b2 <malloc+0x54>
    1498:	10 97       	sbiw	r26, 0x00	; 0
    149a:	31 f0       	breq	.+12     	; 0x14a8 <malloc+0x4a>
    149c:	12 96       	adiw	r26, 0x02	; 2
    149e:	0c 93       	st	X, r16
    14a0:	12 97       	sbiw	r26, 0x02	; 2
    14a2:	13 96       	adiw	r26, 0x03	; 3
    14a4:	1c 93       	st	X, r17
    14a6:	27 c0       	rjmp	.+78     	; 0x14f6 <malloc+0x98>
    14a8:	00 93 2a 04 	sts	0x042A, r16	; 0x80042a <__flp>
    14ac:	10 93 2b 04 	sts	0x042B, r17	; 0x80042b <__flp+0x1>
    14b0:	22 c0       	rjmp	.+68     	; 0x14f6 <malloc+0x98>
    14b2:	21 15       	cp	r18, r1
    14b4:	31 05       	cpc	r19, r1
    14b6:	19 f0       	breq	.+6      	; 0x14be <malloc+0x60>
    14b8:	42 17       	cp	r20, r18
    14ba:	53 07       	cpc	r21, r19
    14bc:	18 f4       	brcc	.+6      	; 0x14c4 <malloc+0x66>
    14be:	9a 01       	movw	r18, r20
    14c0:	bd 01       	movw	r22, r26
    14c2:	ef 01       	movw	r28, r30
    14c4:	df 01       	movw	r26, r30
    14c6:	f8 01       	movw	r30, r16
    14c8:	db cf       	rjmp	.-74     	; 0x1480 <malloc+0x22>
    14ca:	21 15       	cp	r18, r1
    14cc:	31 05       	cpc	r19, r1
    14ce:	f9 f0       	breq	.+62     	; 0x150e <malloc+0xb0>
    14d0:	28 1b       	sub	r18, r24
    14d2:	39 0b       	sbc	r19, r25
    14d4:	24 30       	cpi	r18, 0x04	; 4
    14d6:	31 05       	cpc	r19, r1
    14d8:	80 f4       	brcc	.+32     	; 0x14fa <malloc+0x9c>
    14da:	8a 81       	ldd	r24, Y+2	; 0x02
    14dc:	9b 81       	ldd	r25, Y+3	; 0x03
    14de:	61 15       	cp	r22, r1
    14e0:	71 05       	cpc	r23, r1
    14e2:	21 f0       	breq	.+8      	; 0x14ec <malloc+0x8e>
    14e4:	fb 01       	movw	r30, r22
    14e6:	93 83       	std	Z+3, r25	; 0x03
    14e8:	82 83       	std	Z+2, r24	; 0x02
    14ea:	04 c0       	rjmp	.+8      	; 0x14f4 <malloc+0x96>
    14ec:	90 93 2b 04 	sts	0x042B, r25	; 0x80042b <__flp+0x1>
    14f0:	80 93 2a 04 	sts	0x042A, r24	; 0x80042a <__flp>
    14f4:	fe 01       	movw	r30, r28
    14f6:	32 96       	adiw	r30, 0x02	; 2
    14f8:	44 c0       	rjmp	.+136    	; 0x1582 <malloc+0x124>
    14fa:	fe 01       	movw	r30, r28
    14fc:	e2 0f       	add	r30, r18
    14fe:	f3 1f       	adc	r31, r19
    1500:	81 93       	st	Z+, r24
    1502:	91 93       	st	Z+, r25
    1504:	22 50       	subi	r18, 0x02	; 2
    1506:	31 09       	sbc	r19, r1
    1508:	39 83       	std	Y+1, r19	; 0x01
    150a:	28 83       	st	Y, r18
    150c:	3a c0       	rjmp	.+116    	; 0x1582 <malloc+0x124>
    150e:	20 91 28 04 	lds	r18, 0x0428	; 0x800428 <__brkval>
    1512:	30 91 29 04 	lds	r19, 0x0429	; 0x800429 <__brkval+0x1>
    1516:	23 2b       	or	r18, r19
    1518:	41 f4       	brne	.+16     	; 0x152a <malloc+0xcc>
    151a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    151e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1522:	30 93 29 04 	sts	0x0429, r19	; 0x800429 <__brkval+0x1>
    1526:	20 93 28 04 	sts	0x0428, r18	; 0x800428 <__brkval>
    152a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    152e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    1532:	21 15       	cp	r18, r1
    1534:	31 05       	cpc	r19, r1
    1536:	41 f4       	brne	.+16     	; 0x1548 <malloc+0xea>
    1538:	2d b7       	in	r18, 0x3d	; 61
    153a:	3e b7       	in	r19, 0x3e	; 62
    153c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1540:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1544:	24 1b       	sub	r18, r20
    1546:	35 0b       	sbc	r19, r21
    1548:	e0 91 28 04 	lds	r30, 0x0428	; 0x800428 <__brkval>
    154c:	f0 91 29 04 	lds	r31, 0x0429	; 0x800429 <__brkval+0x1>
    1550:	e2 17       	cp	r30, r18
    1552:	f3 07       	cpc	r31, r19
    1554:	a0 f4       	brcc	.+40     	; 0x157e <malloc+0x120>
    1556:	2e 1b       	sub	r18, r30
    1558:	3f 0b       	sbc	r19, r31
    155a:	28 17       	cp	r18, r24
    155c:	39 07       	cpc	r19, r25
    155e:	78 f0       	brcs	.+30     	; 0x157e <malloc+0x120>
    1560:	ac 01       	movw	r20, r24
    1562:	4e 5f       	subi	r20, 0xFE	; 254
    1564:	5f 4f       	sbci	r21, 0xFF	; 255
    1566:	24 17       	cp	r18, r20
    1568:	35 07       	cpc	r19, r21
    156a:	48 f0       	brcs	.+18     	; 0x157e <malloc+0x120>
    156c:	4e 0f       	add	r20, r30
    156e:	5f 1f       	adc	r21, r31
    1570:	50 93 29 04 	sts	0x0429, r21	; 0x800429 <__brkval+0x1>
    1574:	40 93 28 04 	sts	0x0428, r20	; 0x800428 <__brkval>
    1578:	81 93       	st	Z+, r24
    157a:	91 93       	st	Z+, r25
    157c:	02 c0       	rjmp	.+4      	; 0x1582 <malloc+0x124>
    157e:	e0 e0       	ldi	r30, 0x00	; 0
    1580:	f0 e0       	ldi	r31, 0x00	; 0
    1582:	cf 01       	movw	r24, r30
    1584:	df 91       	pop	r29
    1586:	cf 91       	pop	r28
    1588:	1f 91       	pop	r17
    158a:	0f 91       	pop	r16
    158c:	08 95       	ret

0000158e <free>:
    158e:	cf 93       	push	r28
    1590:	df 93       	push	r29
    1592:	00 97       	sbiw	r24, 0x00	; 0
    1594:	09 f4       	brne	.+2      	; 0x1598 <free+0xa>
    1596:	81 c0       	rjmp	.+258    	; 0x169a <free+0x10c>
    1598:	fc 01       	movw	r30, r24
    159a:	32 97       	sbiw	r30, 0x02	; 2
    159c:	13 82       	std	Z+3, r1	; 0x03
    159e:	12 82       	std	Z+2, r1	; 0x02
    15a0:	a0 91 2a 04 	lds	r26, 0x042A	; 0x80042a <__flp>
    15a4:	b0 91 2b 04 	lds	r27, 0x042B	; 0x80042b <__flp+0x1>
    15a8:	10 97       	sbiw	r26, 0x00	; 0
    15aa:	81 f4       	brne	.+32     	; 0x15cc <free+0x3e>
    15ac:	20 81       	ld	r18, Z
    15ae:	31 81       	ldd	r19, Z+1	; 0x01
    15b0:	82 0f       	add	r24, r18
    15b2:	93 1f       	adc	r25, r19
    15b4:	20 91 28 04 	lds	r18, 0x0428	; 0x800428 <__brkval>
    15b8:	30 91 29 04 	lds	r19, 0x0429	; 0x800429 <__brkval+0x1>
    15bc:	28 17       	cp	r18, r24
    15be:	39 07       	cpc	r19, r25
    15c0:	51 f5       	brne	.+84     	; 0x1616 <free+0x88>
    15c2:	f0 93 29 04 	sts	0x0429, r31	; 0x800429 <__brkval+0x1>
    15c6:	e0 93 28 04 	sts	0x0428, r30	; 0x800428 <__brkval>
    15ca:	67 c0       	rjmp	.+206    	; 0x169a <free+0x10c>
    15cc:	ed 01       	movw	r28, r26
    15ce:	20 e0       	ldi	r18, 0x00	; 0
    15d0:	30 e0       	ldi	r19, 0x00	; 0
    15d2:	ce 17       	cp	r28, r30
    15d4:	df 07       	cpc	r29, r31
    15d6:	40 f4       	brcc	.+16     	; 0x15e8 <free+0x5a>
    15d8:	4a 81       	ldd	r20, Y+2	; 0x02
    15da:	5b 81       	ldd	r21, Y+3	; 0x03
    15dc:	9e 01       	movw	r18, r28
    15de:	41 15       	cp	r20, r1
    15e0:	51 05       	cpc	r21, r1
    15e2:	f1 f0       	breq	.+60     	; 0x1620 <free+0x92>
    15e4:	ea 01       	movw	r28, r20
    15e6:	f5 cf       	rjmp	.-22     	; 0x15d2 <free+0x44>
    15e8:	d3 83       	std	Z+3, r29	; 0x03
    15ea:	c2 83       	std	Z+2, r28	; 0x02
    15ec:	40 81       	ld	r20, Z
    15ee:	51 81       	ldd	r21, Z+1	; 0x01
    15f0:	84 0f       	add	r24, r20
    15f2:	95 1f       	adc	r25, r21
    15f4:	c8 17       	cp	r28, r24
    15f6:	d9 07       	cpc	r29, r25
    15f8:	59 f4       	brne	.+22     	; 0x1610 <free+0x82>
    15fa:	88 81       	ld	r24, Y
    15fc:	99 81       	ldd	r25, Y+1	; 0x01
    15fe:	84 0f       	add	r24, r20
    1600:	95 1f       	adc	r25, r21
    1602:	02 96       	adiw	r24, 0x02	; 2
    1604:	91 83       	std	Z+1, r25	; 0x01
    1606:	80 83       	st	Z, r24
    1608:	8a 81       	ldd	r24, Y+2	; 0x02
    160a:	9b 81       	ldd	r25, Y+3	; 0x03
    160c:	93 83       	std	Z+3, r25	; 0x03
    160e:	82 83       	std	Z+2, r24	; 0x02
    1610:	21 15       	cp	r18, r1
    1612:	31 05       	cpc	r19, r1
    1614:	29 f4       	brne	.+10     	; 0x1620 <free+0x92>
    1616:	f0 93 2b 04 	sts	0x042B, r31	; 0x80042b <__flp+0x1>
    161a:	e0 93 2a 04 	sts	0x042A, r30	; 0x80042a <__flp>
    161e:	3d c0       	rjmp	.+122    	; 0x169a <free+0x10c>
    1620:	e9 01       	movw	r28, r18
    1622:	fb 83       	std	Y+3, r31	; 0x03
    1624:	ea 83       	std	Y+2, r30	; 0x02
    1626:	49 91       	ld	r20, Y+
    1628:	59 91       	ld	r21, Y+
    162a:	c4 0f       	add	r28, r20
    162c:	d5 1f       	adc	r29, r21
    162e:	ec 17       	cp	r30, r28
    1630:	fd 07       	cpc	r31, r29
    1632:	61 f4       	brne	.+24     	; 0x164c <free+0xbe>
    1634:	80 81       	ld	r24, Z
    1636:	91 81       	ldd	r25, Z+1	; 0x01
    1638:	84 0f       	add	r24, r20
    163a:	95 1f       	adc	r25, r21
    163c:	02 96       	adiw	r24, 0x02	; 2
    163e:	e9 01       	movw	r28, r18
    1640:	99 83       	std	Y+1, r25	; 0x01
    1642:	88 83       	st	Y, r24
    1644:	82 81       	ldd	r24, Z+2	; 0x02
    1646:	93 81       	ldd	r25, Z+3	; 0x03
    1648:	9b 83       	std	Y+3, r25	; 0x03
    164a:	8a 83       	std	Y+2, r24	; 0x02
    164c:	e0 e0       	ldi	r30, 0x00	; 0
    164e:	f0 e0       	ldi	r31, 0x00	; 0
    1650:	12 96       	adiw	r26, 0x02	; 2
    1652:	8d 91       	ld	r24, X+
    1654:	9c 91       	ld	r25, X
    1656:	13 97       	sbiw	r26, 0x03	; 3
    1658:	00 97       	sbiw	r24, 0x00	; 0
    165a:	19 f0       	breq	.+6      	; 0x1662 <free+0xd4>
    165c:	fd 01       	movw	r30, r26
    165e:	dc 01       	movw	r26, r24
    1660:	f7 cf       	rjmp	.-18     	; 0x1650 <free+0xc2>
    1662:	8d 91       	ld	r24, X+
    1664:	9c 91       	ld	r25, X
    1666:	11 97       	sbiw	r26, 0x01	; 1
    1668:	9d 01       	movw	r18, r26
    166a:	2e 5f       	subi	r18, 0xFE	; 254
    166c:	3f 4f       	sbci	r19, 0xFF	; 255
    166e:	82 0f       	add	r24, r18
    1670:	93 1f       	adc	r25, r19
    1672:	20 91 28 04 	lds	r18, 0x0428	; 0x800428 <__brkval>
    1676:	30 91 29 04 	lds	r19, 0x0429	; 0x800429 <__brkval+0x1>
    167a:	28 17       	cp	r18, r24
    167c:	39 07       	cpc	r19, r25
    167e:	69 f4       	brne	.+26     	; 0x169a <free+0x10c>
    1680:	30 97       	sbiw	r30, 0x00	; 0
    1682:	29 f4       	brne	.+10     	; 0x168e <free+0x100>
    1684:	10 92 2b 04 	sts	0x042B, r1	; 0x80042b <__flp+0x1>
    1688:	10 92 2a 04 	sts	0x042A, r1	; 0x80042a <__flp>
    168c:	02 c0       	rjmp	.+4      	; 0x1692 <free+0x104>
    168e:	13 82       	std	Z+3, r1	; 0x03
    1690:	12 82       	std	Z+2, r1	; 0x02
    1692:	b0 93 29 04 	sts	0x0429, r27	; 0x800429 <__brkval+0x1>
    1696:	a0 93 28 04 	sts	0x0428, r26	; 0x800428 <__brkval>
    169a:	df 91       	pop	r29
    169c:	cf 91       	pop	r28
    169e:	08 95       	ret

000016a0 <strnlen_P>:
    16a0:	fc 01       	movw	r30, r24
    16a2:	05 90       	lpm	r0, Z+
    16a4:	61 50       	subi	r22, 0x01	; 1
    16a6:	70 40       	sbci	r23, 0x00	; 0
    16a8:	01 10       	cpse	r0, r1
    16aa:	d8 f7       	brcc	.-10     	; 0x16a2 <strnlen_P+0x2>
    16ac:	80 95       	com	r24
    16ae:	90 95       	com	r25
    16b0:	8e 0f       	add	r24, r30
    16b2:	9f 1f       	adc	r25, r31
    16b4:	08 95       	ret

000016b6 <memset>:
    16b6:	dc 01       	movw	r26, r24
    16b8:	01 c0       	rjmp	.+2      	; 0x16bc <memset+0x6>
    16ba:	6d 93       	st	X+, r22
    16bc:	41 50       	subi	r20, 0x01	; 1
    16be:	50 40       	sbci	r21, 0x00	; 0
    16c0:	e0 f7       	brcc	.-8      	; 0x16ba <memset+0x4>
    16c2:	08 95       	ret

000016c4 <strnlen>:
    16c4:	fc 01       	movw	r30, r24
    16c6:	61 50       	subi	r22, 0x01	; 1
    16c8:	70 40       	sbci	r23, 0x00	; 0
    16ca:	01 90       	ld	r0, Z+
    16cc:	01 10       	cpse	r0, r1
    16ce:	d8 f7       	brcc	.-10     	; 0x16c6 <strnlen+0x2>
    16d0:	80 95       	com	r24
    16d2:	90 95       	com	r25
    16d4:	8e 0f       	add	r24, r30
    16d6:	9f 1f       	adc	r25, r31
    16d8:	08 95       	ret

000016da <strrev>:
    16da:	dc 01       	movw	r26, r24
    16dc:	fc 01       	movw	r30, r24
    16de:	67 2f       	mov	r22, r23
    16e0:	71 91       	ld	r23, Z+
    16e2:	77 23       	and	r23, r23
    16e4:	e1 f7       	brne	.-8      	; 0x16de <strrev+0x4>
    16e6:	32 97       	sbiw	r30, 0x02	; 2
    16e8:	04 c0       	rjmp	.+8      	; 0x16f2 <strrev+0x18>
    16ea:	7c 91       	ld	r23, X
    16ec:	6d 93       	st	X+, r22
    16ee:	70 83       	st	Z, r23
    16f0:	62 91       	ld	r22, -Z
    16f2:	ae 17       	cp	r26, r30
    16f4:	bf 07       	cpc	r27, r31
    16f6:	c8 f3       	brcs	.-14     	; 0x16ea <strrev+0x10>
    16f8:	08 95       	ret

000016fa <fputc>:
    16fa:	0f 93       	push	r16
    16fc:	1f 93       	push	r17
    16fe:	cf 93       	push	r28
    1700:	df 93       	push	r29
    1702:	fb 01       	movw	r30, r22
    1704:	23 81       	ldd	r18, Z+3	; 0x03
    1706:	21 fd       	sbrc	r18, 1
    1708:	03 c0       	rjmp	.+6      	; 0x1710 <fputc+0x16>
    170a:	8f ef       	ldi	r24, 0xFF	; 255
    170c:	9f ef       	ldi	r25, 0xFF	; 255
    170e:	2c c0       	rjmp	.+88     	; 0x1768 <fputc+0x6e>
    1710:	22 ff       	sbrs	r18, 2
    1712:	16 c0       	rjmp	.+44     	; 0x1740 <fputc+0x46>
    1714:	46 81       	ldd	r20, Z+6	; 0x06
    1716:	57 81       	ldd	r21, Z+7	; 0x07
    1718:	24 81       	ldd	r18, Z+4	; 0x04
    171a:	35 81       	ldd	r19, Z+5	; 0x05
    171c:	42 17       	cp	r20, r18
    171e:	53 07       	cpc	r21, r19
    1720:	44 f4       	brge	.+16     	; 0x1732 <fputc+0x38>
    1722:	a0 81       	ld	r26, Z
    1724:	b1 81       	ldd	r27, Z+1	; 0x01
    1726:	9d 01       	movw	r18, r26
    1728:	2f 5f       	subi	r18, 0xFF	; 255
    172a:	3f 4f       	sbci	r19, 0xFF	; 255
    172c:	31 83       	std	Z+1, r19	; 0x01
    172e:	20 83       	st	Z, r18
    1730:	8c 93       	st	X, r24
    1732:	26 81       	ldd	r18, Z+6	; 0x06
    1734:	37 81       	ldd	r19, Z+7	; 0x07
    1736:	2f 5f       	subi	r18, 0xFF	; 255
    1738:	3f 4f       	sbci	r19, 0xFF	; 255
    173a:	37 83       	std	Z+7, r19	; 0x07
    173c:	26 83       	std	Z+6, r18	; 0x06
    173e:	14 c0       	rjmp	.+40     	; 0x1768 <fputc+0x6e>
    1740:	8b 01       	movw	r16, r22
    1742:	ec 01       	movw	r28, r24
    1744:	fb 01       	movw	r30, r22
    1746:	00 84       	ldd	r0, Z+8	; 0x08
    1748:	f1 85       	ldd	r31, Z+9	; 0x09
    174a:	e0 2d       	mov	r30, r0
    174c:	09 95       	icall
    174e:	89 2b       	or	r24, r25
    1750:	e1 f6       	brne	.-72     	; 0x170a <fputc+0x10>
    1752:	d8 01       	movw	r26, r16
    1754:	16 96       	adiw	r26, 0x06	; 6
    1756:	8d 91       	ld	r24, X+
    1758:	9c 91       	ld	r25, X
    175a:	17 97       	sbiw	r26, 0x07	; 7
    175c:	01 96       	adiw	r24, 0x01	; 1
    175e:	17 96       	adiw	r26, 0x07	; 7
    1760:	9c 93       	st	X, r25
    1762:	8e 93       	st	-X, r24
    1764:	16 97       	sbiw	r26, 0x06	; 6
    1766:	ce 01       	movw	r24, r28
    1768:	df 91       	pop	r29
    176a:	cf 91       	pop	r28
    176c:	1f 91       	pop	r17
    176e:	0f 91       	pop	r16
    1770:	08 95       	ret

00001772 <__ultoa_invert>:
    1772:	fa 01       	movw	r30, r20
    1774:	aa 27       	eor	r26, r26
    1776:	28 30       	cpi	r18, 0x08	; 8
    1778:	51 f1       	breq	.+84     	; 0x17ce <__ultoa_invert+0x5c>
    177a:	20 31       	cpi	r18, 0x10	; 16
    177c:	81 f1       	breq	.+96     	; 0x17de <__ultoa_invert+0x6c>
    177e:	e8 94       	clt
    1780:	6f 93       	push	r22
    1782:	6e 7f       	andi	r22, 0xFE	; 254
    1784:	6e 5f       	subi	r22, 0xFE	; 254
    1786:	7f 4f       	sbci	r23, 0xFF	; 255
    1788:	8f 4f       	sbci	r24, 0xFF	; 255
    178a:	9f 4f       	sbci	r25, 0xFF	; 255
    178c:	af 4f       	sbci	r26, 0xFF	; 255
    178e:	b1 e0       	ldi	r27, 0x01	; 1
    1790:	3e d0       	rcall	.+124    	; 0x180e <__ultoa_invert+0x9c>
    1792:	b4 e0       	ldi	r27, 0x04	; 4
    1794:	3c d0       	rcall	.+120    	; 0x180e <__ultoa_invert+0x9c>
    1796:	67 0f       	add	r22, r23
    1798:	78 1f       	adc	r23, r24
    179a:	89 1f       	adc	r24, r25
    179c:	9a 1f       	adc	r25, r26
    179e:	a1 1d       	adc	r26, r1
    17a0:	68 0f       	add	r22, r24
    17a2:	79 1f       	adc	r23, r25
    17a4:	8a 1f       	adc	r24, r26
    17a6:	91 1d       	adc	r25, r1
    17a8:	a1 1d       	adc	r26, r1
    17aa:	6a 0f       	add	r22, r26
    17ac:	71 1d       	adc	r23, r1
    17ae:	81 1d       	adc	r24, r1
    17b0:	91 1d       	adc	r25, r1
    17b2:	a1 1d       	adc	r26, r1
    17b4:	20 d0       	rcall	.+64     	; 0x17f6 <__ultoa_invert+0x84>
    17b6:	09 f4       	brne	.+2      	; 0x17ba <__ultoa_invert+0x48>
    17b8:	68 94       	set
    17ba:	3f 91       	pop	r19
    17bc:	2a e0       	ldi	r18, 0x0A	; 10
    17be:	26 9f       	mul	r18, r22
    17c0:	11 24       	eor	r1, r1
    17c2:	30 19       	sub	r19, r0
    17c4:	30 5d       	subi	r19, 0xD0	; 208
    17c6:	31 93       	st	Z+, r19
    17c8:	de f6       	brtc	.-74     	; 0x1780 <__ultoa_invert+0xe>
    17ca:	cf 01       	movw	r24, r30
    17cc:	08 95       	ret
    17ce:	46 2f       	mov	r20, r22
    17d0:	47 70       	andi	r20, 0x07	; 7
    17d2:	40 5d       	subi	r20, 0xD0	; 208
    17d4:	41 93       	st	Z+, r20
    17d6:	b3 e0       	ldi	r27, 0x03	; 3
    17d8:	0f d0       	rcall	.+30     	; 0x17f8 <__ultoa_invert+0x86>
    17da:	c9 f7       	brne	.-14     	; 0x17ce <__ultoa_invert+0x5c>
    17dc:	f6 cf       	rjmp	.-20     	; 0x17ca <__ultoa_invert+0x58>
    17de:	46 2f       	mov	r20, r22
    17e0:	4f 70       	andi	r20, 0x0F	; 15
    17e2:	40 5d       	subi	r20, 0xD0	; 208
    17e4:	4a 33       	cpi	r20, 0x3A	; 58
    17e6:	18 f0       	brcs	.+6      	; 0x17ee <__ultoa_invert+0x7c>
    17e8:	49 5d       	subi	r20, 0xD9	; 217
    17ea:	31 fd       	sbrc	r19, 1
    17ec:	40 52       	subi	r20, 0x20	; 32
    17ee:	41 93       	st	Z+, r20
    17f0:	02 d0       	rcall	.+4      	; 0x17f6 <__ultoa_invert+0x84>
    17f2:	a9 f7       	brne	.-22     	; 0x17de <__ultoa_invert+0x6c>
    17f4:	ea cf       	rjmp	.-44     	; 0x17ca <__ultoa_invert+0x58>
    17f6:	b4 e0       	ldi	r27, 0x04	; 4
    17f8:	a6 95       	lsr	r26
    17fa:	97 95       	ror	r25
    17fc:	87 95       	ror	r24
    17fe:	77 95       	ror	r23
    1800:	67 95       	ror	r22
    1802:	ba 95       	dec	r27
    1804:	c9 f7       	brne	.-14     	; 0x17f8 <__ultoa_invert+0x86>
    1806:	00 97       	sbiw	r24, 0x00	; 0
    1808:	61 05       	cpc	r22, r1
    180a:	71 05       	cpc	r23, r1
    180c:	08 95       	ret
    180e:	9b 01       	movw	r18, r22
    1810:	ac 01       	movw	r20, r24
    1812:	0a 2e       	mov	r0, r26
    1814:	06 94       	lsr	r0
    1816:	57 95       	ror	r21
    1818:	47 95       	ror	r20
    181a:	37 95       	ror	r19
    181c:	27 95       	ror	r18
    181e:	ba 95       	dec	r27
    1820:	c9 f7       	brne	.-14     	; 0x1814 <__ultoa_invert+0xa2>
    1822:	62 0f       	add	r22, r18
    1824:	73 1f       	adc	r23, r19
    1826:	84 1f       	adc	r24, r20
    1828:	95 1f       	adc	r25, r21
    182a:	a0 1d       	adc	r26, r0
    182c:	08 95       	ret

0000182e <__prologue_saves__>:
    182e:	2f 92       	push	r2
    1830:	3f 92       	push	r3
    1832:	4f 92       	push	r4
    1834:	5f 92       	push	r5
    1836:	6f 92       	push	r6
    1838:	7f 92       	push	r7
    183a:	8f 92       	push	r8
    183c:	9f 92       	push	r9
    183e:	af 92       	push	r10
    1840:	bf 92       	push	r11
    1842:	cf 92       	push	r12
    1844:	df 92       	push	r13
    1846:	ef 92       	push	r14
    1848:	ff 92       	push	r15
    184a:	0f 93       	push	r16
    184c:	1f 93       	push	r17
    184e:	cf 93       	push	r28
    1850:	df 93       	push	r29
    1852:	cd b7       	in	r28, 0x3d	; 61
    1854:	de b7       	in	r29, 0x3e	; 62
    1856:	ca 1b       	sub	r28, r26
    1858:	db 0b       	sbc	r29, r27
    185a:	0f b6       	in	r0, 0x3f	; 63
    185c:	f8 94       	cli
    185e:	de bf       	out	0x3e, r29	; 62
    1860:	0f be       	out	0x3f, r0	; 63
    1862:	cd bf       	out	0x3d, r28	; 61
    1864:	09 94       	ijmp

00001866 <__epilogue_restores__>:
    1866:	2a 88       	ldd	r2, Y+18	; 0x12
    1868:	39 88       	ldd	r3, Y+17	; 0x11
    186a:	48 88       	ldd	r4, Y+16	; 0x10
    186c:	5f 84       	ldd	r5, Y+15	; 0x0f
    186e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1870:	7d 84       	ldd	r7, Y+13	; 0x0d
    1872:	8c 84       	ldd	r8, Y+12	; 0x0c
    1874:	9b 84       	ldd	r9, Y+11	; 0x0b
    1876:	aa 84       	ldd	r10, Y+10	; 0x0a
    1878:	b9 84       	ldd	r11, Y+9	; 0x09
    187a:	c8 84       	ldd	r12, Y+8	; 0x08
    187c:	df 80       	ldd	r13, Y+7	; 0x07
    187e:	ee 80       	ldd	r14, Y+6	; 0x06
    1880:	fd 80       	ldd	r15, Y+5	; 0x05
    1882:	0c 81       	ldd	r16, Y+4	; 0x04
    1884:	1b 81       	ldd	r17, Y+3	; 0x03
    1886:	aa 81       	ldd	r26, Y+2	; 0x02
    1888:	b9 81       	ldd	r27, Y+1	; 0x01
    188a:	ce 0f       	add	r28, r30
    188c:	d1 1d       	adc	r29, r1
    188e:	0f b6       	in	r0, 0x3f	; 63
    1890:	f8 94       	cli
    1892:	de bf       	out	0x3e, r29	; 62
    1894:	0f be       	out	0x3f, r0	; 63
    1896:	cd bf       	out	0x3d, r28	; 61
    1898:	ed 01       	movw	r28, r26
    189a:	08 95       	ret

0000189c <_exit>:
    189c:	f8 94       	cli

0000189e <__stop_program>:
    189e:	ff cf       	rjmp	.-2      	; 0x189e <__stop_program>
